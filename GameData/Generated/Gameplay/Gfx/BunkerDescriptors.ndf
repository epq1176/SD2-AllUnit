// Ne pas éditer, ce fichier est auto-généré !


export Descriptor_Unit_Bunker is TEntityDescriptor
(
    DescriptorId = GUID:{828c1e57-298c-404e-bc7b-516172b086a5}
    ClassNameForDebug = 'Bunker'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMG42'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMG42'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMG42'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_AK is TEntityDescriptor
(
    DescriptorId = GUID:{7c43bf50-0a21-40be-9c1f-f01f1272fe09}
    ClassNameForDebug = 'Bunker_ATR_AK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_AK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_PTRD41_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_PTRD41_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_ATRSO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_AK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_ATRSO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_AK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_AK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_ATRSO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_AK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_AK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_AWP is TEntityDescriptor
(
    DescriptorId = GUID:{ba63a61b-db91-4b5b-b788-96208880c25a}
    ClassNameForDebug = 'Bunker_ATR_AWP'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_AWP
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_PTRD41_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_PTRD41_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_ATRSO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_AWP
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_ATRSO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_AWP'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_AWP'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_ATRSO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_AWP'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_AWP'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_FIN is TEntityDescriptor
(
    DescriptorId = GUID:{d1cc051f-06bd-45d7-9c20-91e8c16c731b}
    ClassNameForDebug = 'Bunker_ATR_FIN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_FIN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_Solothurn_HON'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_Solothurn_HON'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FIN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'HTUQLEIKCK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_FIN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'HTUQLEIKCK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_FIN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_FIN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'HTUQLEIKCK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_FIN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_FIN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_HON is TEntityDescriptor
(
    DescriptorId = GUID:{94311aad-ddac-4a2f-b222-202a48ec8f4b}
    ClassNameForDebug = 'Bunker_ATR_HON'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_HON
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_Solothurn_HON'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_Solothurn_HON'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'HON'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_ATRHO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_HON
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_ATRHO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_HON'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_HON'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_ATRHO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_HON'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_HON'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_ROU is TEntityDescriptor
(
    DescriptorId = GUID:{04354dbc-d633-4c53-9a37-734f7e4c5621}
    ClassNameForDebug = 'Bunker_ATR_ROU'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_ROU
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_PTRD41_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_PTRD41_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ROU'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_ATRSO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_ROU
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_ATRSO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_ROU'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_ROU'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_ATRSO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_ROU'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_ROU'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_SOV is TEntityDescriptor
(
    DescriptorId = GUID:{983b2788-da61-4188-be74-7f21302d818e}
    ClassNameForDebug = 'Bunker_ATR_SOV'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_SOV
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_PTRD41_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_PTRD41_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SOV'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_ATRSO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_PTRD41_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_SOV
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_ATRSO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_SOV'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_SOV'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_ATRSO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_SOV'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_SOV'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_ATR_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{27a5c2a7-b0ef-431e-a1ec-0ca35dc0d59e}
    ClassNameForDebug = 'Bunker_ATR_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_ATR_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_ATR_Solothurn_HON'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_ATR_Solothurn_HON'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'NDPSUEAOFO'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_ATR_Solothurn_HON'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_ATR_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'NDPSUEAOFO'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'NDPSUEAOFO'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_ATR_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_ATR_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_37mm_AK is TEntityDescriptor
(
    DescriptorId = GUID:{93b907cc-a1c2-4fa6-9508-e671077d9350}
    ClassNameForDebug = 'Bunker_AT_37mm_AK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_36'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_37mm_AK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_36'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_36'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK36'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_36'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_37mm_AK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK36'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_37mm_AK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_37mm_AK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK36'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_37mm_AK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_37mm_AK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_37mm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{fc16d73b-6deb-497e-93eb-9f8aadbfdf3a}
    ClassNameForDebug = 'Bunker_AT_37mm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_36'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_37mm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_36'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_36'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK36'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_36'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_37mm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK36'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_37mm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_37mm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK36'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_37mm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_37mm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_40mm_HON is TEntityDescriptor
(
    DescriptorId = GUID:{dd35ebfd-0483-4a4b-bf29-7b5fbb1d874f}
    ClassNameForDebug = 'Bunker_AT_40mm_HON'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_40M_HON'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_40mm_HON
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_40M_HON'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_40M_HON'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'HON'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_40HON'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_40M_HON'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_40mm_HON
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_40HON'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_40mm_HON'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_40mm_HON'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_40HON'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_40mm_HON'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_40mm_HON'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_45mm_AWP is TEntityDescriptor
(
    DescriptorId = GUID:{979324a3-ed63-4277-8978-ca5ec66dc915}
    ClassNameForDebug = 'Bunker_AT_45mm_AWP'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_obr_42_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_45mm_AWP
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_obr_42_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_obr_42_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_45SOV'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_obr_42_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_45mm_AWP
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_45SOV'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_AWP'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_AWP'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_45SOV'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_AWP'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_AWP'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_45mm_FIN is TEntityDescriptor
(
    DescriptorId = GUID:{034c4610-1f5e-4bcb-bc51-a52eaeb2098b}
    ClassNameForDebug = 'Bunker_AT_45mm_FIN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_obr_42_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_45mm_FIN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_obr_42_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_obr_42_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FIN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_45FIN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_obr_42_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_45mm_FIN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_45FIN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_FIN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_FIN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_45FIN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_FIN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_FIN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_45mm_ROU is TEntityDescriptor
(
    DescriptorId = GUID:{d8388a48-b1af-4a61-bb35-bca640eb26f7}
    ClassNameForDebug = 'Bunker_AT_45mm_ROU'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_obr_42_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_45mm_ROU
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_obr_42_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_obr_42_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ROU'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_45SOV'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_obr_42_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_45mm_ROU
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_45SOV'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_ROU'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_ROU'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_45SOV'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_ROU'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_ROU'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_45mm_SOV is TEntityDescriptor
(
    DescriptorId = GUID:{f86a243f-9fd3-4287-9446-3e4254639043}
    ClassNameForDebug = 'Bunker_AT_45mm_SOV'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_obr_42_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_45mm_SOV
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_obr_42_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_obr_42_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SOV'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_45SOV'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_obr_42_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_45mm_SOV
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_45SOV'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_SOV'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_SOV'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_45SOV'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_45mm_SOV'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_45mm_SOV'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_47mm_RSI is TEntityDescriptor
(
    DescriptorId = GUID:{ec10bdb1-6f71-4e56-980b-d6d97d104dcb}
    ClassNameForDebug = 'Bunker_AT_47mm_RSI'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_36'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_47mm_RSI
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_36'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_36'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'RSI'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'QDJCHHNFTI'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_36'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_47mm_RSI
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'QDJCHHNFTI'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_47mm_RSI'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_47mm_RSI'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'QDJCHHNFTI'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_47mm_RSI'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_47mm_RSI'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_47mm_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{edc74ffc-a779-4dad-a494-71f341f32dc7}
    ClassNameForDebug = 'Bunker_AT_47mm_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_36'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_47mm_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 25),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_36'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_36'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'VHOFTXXLEF'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_36'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Leger",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_47mm_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'VHOFTXXLEF'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_47mm_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_47mm_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'VHOFTXXLEF'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_47mm_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_47mm_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_57mm_FR is TEntityDescriptor
(
    DescriptorId = GUID:{12c39f78-df51-40f6-8f3c-2b80aa648792}
    ClassNameForDebug = 'Bunker_AT_57mm_FR'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_57mm_FR
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FR'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57FR'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_57mm_FR
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57FR'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_57mm_FR'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_57mm_FR'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57FR'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_57mm_FR'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_57mm_FR'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_57mm_US is TEntityDescriptor
(
    DescriptorId = GUID:{c2faca6b-f915-4194-b29a-054adf65c554}
    ClassNameForDebug = 'Bunker_AT_57mm_US'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_57mm_US
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'US'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57US'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_57mm_US
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57US'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_57mm_US'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_57mm_US'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57US'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_57mm_US'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_57mm_US'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_CAN is TEntityDescriptor
(
    DescriptorId = GUID:{931bb11e-fb01-4c8b-bf22-a4a2abfdc72d}
    ClassNameForDebug = 'Bunker_AT_6pdr_CAN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_CAN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'CAN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57CAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_CAN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57CAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_CAN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_CAN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_CAN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57CAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_CAN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_CAN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_CAN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_CZ is TEntityDescriptor
(
    DescriptorId = GUID:{8895564c-d1b1-4384-abef-a8aa1ec1b834}
    ClassNameForDebug = 'Bunker_AT_6pdr_CZ'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_CZ
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'CZ'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57UK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_CZ
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57UK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_CZ'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_CZ'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_CZ'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57UK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_CZ'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_CZ'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_CZ'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_ITA is TEntityDescriptor
(
    DescriptorId = GUID:{fb8cfd29-c384-47af-bbc5-d85be101888a}
    ClassNameForDebug = 'Bunker_AT_6pdr_ITA'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_ITA
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ITA'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'TWWLSJROJG'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_ITA
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'TWWLSJROJG'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_ITA'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_ITA'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ITA'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'TWWLSJROJG'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_ITA'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_ITA'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ITA'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_NZ is TEntityDescriptor
(
    DescriptorId = GUID:{0290fdeb-aeaf-4516-b721-56a7567f0626}
    ClassNameForDebug = 'Bunker_AT_6pdr_NZ'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_NZ
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'NZ'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57CAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_NZ
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57CAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_NZ'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_NZ'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_NZ'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57CAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_NZ'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_NZ'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_NZ'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_SA is TEntityDescriptor
(
    DescriptorId = GUID:{5c545162-acfe-4f99-b11d-8605d04277d5}
    ClassNameForDebug = 'Bunker_AT_6pdr_SA'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_SA
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SA'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57UK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_SA
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57UK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_SA'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_SA'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SA'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57UK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_SA'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_SA'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SA'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_6pdr_UK is TEntityDescriptor
(
    DescriptorId = GUID:{7383c63b-5b04-4b62-ac81-b5b8b635e552}
    ClassNameForDebug = 'Bunker_AT_6pdr_UK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_6pdr_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_6pdr_UK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 35),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_6pdr_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_6pdr_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'UK'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_57UK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_6pdr_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_6pdr_UK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_57UK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_UK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_UK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_UK'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_57UK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_6pdr_UK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_6pdr_UK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_UK'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_AK is TEntityDescriptor
(
    DescriptorId = GUID:{08263a7d-e03b-4118-8154-fb8ddade1427}
    ClassNameForDebug = 'Bunker_AT_75mm_AK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_AK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK40'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_AK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK40'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_AK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_AK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK40'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_AK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_AK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_FIN is TEntityDescriptor
(
    DescriptorId = GUID:{069c766c-1aac-4898-899b-0fb23d65cf6c}
    ClassNameForDebug = 'Bunker_AT_75mm_FIN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_FIN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FIN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_75FIN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_FIN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_75FIN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_FIN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_FIN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_75FIN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_FIN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_FIN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{f5bd1557-ce2a-45a0-a01a-6ca3e7e090c6}
    ClassNameForDebug = 'Bunker_AT_75mm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK40'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK40'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK40'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_HON is TEntityDescriptor
(
    DescriptorId = GUID:{000abc8e-96b7-4ffb-819b-e464daa8ab58}
    ClassNameForDebug = 'Bunker_AT_75mm_HON'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_HON
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'HON'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_75HON'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_HON
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_75HON'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_HON'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_HON'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_75HON'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_HON'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_HON'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_ROU is TEntityDescriptor
(
    DescriptorId = GUID:{76b610be-eaf0-48e4-9448-cdc58cc4d25d}
    ClassNameForDebug = 'Bunker_AT_75mm_ROU'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_ROU
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ROU'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_75HON'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_ROU
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_75HON'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_ROU'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_ROU'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_75HON'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_ROU'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_ROU'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_RSI is TEntityDescriptor
(
    DescriptorId = GUID:{c91d4dce-51c0-4cc3-90cd-21249c798d9d}
    ClassNameForDebug = 'Bunker_AT_75mm_RSI'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_RSI
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'RSI'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'BVCBLQBWJX'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_RSI
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'BVCBLQBWJX'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_RSI'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_RSI'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'BVCBLQBWJX'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_RSI'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_RSI'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_75mm_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{8879821b-ea2e-44aa-b63e-b3b51f161407}
    ClassNameForDebug = 'Bunker_AT_75mm_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_PaK_40'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_75mm_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 50),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_PaK_40'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_PaK_40'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'XNYYFDKBGH'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_PaK_40'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_75mm_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'XNYYFDKBGH'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'XNYYFDKBGH'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_75mm_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_75mm_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_76mm_SOV is TEntityDescriptor
(
    DescriptorId = GUID:{bf176ddf-05fe-43cd-baa5-5344ecd541cc}
    ClassNameForDebug = 'Bunker_AT_76mm_SOV'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_ZIS3_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_76mm_SOV
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_ZIS3_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_ZIS3_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SOV'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_76SOV'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_ZIS3_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_76mm_SOV
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_76SOV'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_76mm_SOV'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_76mm_SOV'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_76SOV'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_76mm_SOV'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_76mm_SOV'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_Pantherturm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{663489a4-b999-4593-85ac-0f6e3a8b7148}
    ClassNameForDebug = 'Bunker_AT_Pantherturm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_Pantherturm'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_Pantherturm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 70),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_Pantherturm'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_Pantherturm'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Bunker
                        ArmorDescriptorSides = ArmorDescriptor_Bunker
                        ArmorDescriptorRear = ArmorDescriptor_Bunker
                        ArmorDescriptorTop = ArmorDescriptor_Bunker
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'VGIEGMCAUP'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_Pantherturm'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_Pantherturm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'VGIEGMCAUP'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Pantherturm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Pantherturm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'VGIEGMCAUP'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Pantherturm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Pantherturm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_Panzerstellung_PzII_20mm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{97aec9a1-af41-4ede-9b9c-36bb76f438cd}
    ClassNameForDebug = 'Bunker_AT_Panzerstellung_PzII_20mm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_Panzerstellung_PzII'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_Panzerstellung_PzII_20mm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 20),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_Panzerstellung_PzII'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_Panzerstellung_PzII'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Bunker
                        ArmorDescriptorSides = ArmorDescriptor_Bunker
                        ArmorDescriptorRear = ArmorDescriptor_Bunker
                        ArmorDescriptorTop = ArmorDescriptor_Bunker
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'GVOIAWMGRG'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_Panzerstellung_PzII'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_Panzerstellung_PzII_20mm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'GVOIAWMGRG'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_PzII_20mm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_PzII_20mm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'GVOIAWMGRG'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_PzII_20mm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_PzII_20mm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_Panzerstellung_R35_37mm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{954b7fa3-3992-4d1b-822a-db9b6075e9ff}
    ClassNameForDebug = 'Bunker_AT_Panzerstellung_R35_37mm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_Panzerstellung_R35'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_Panzerstellung_R35_37mm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_Panzerstellung_R35'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_Panzerstellung_R35'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Bunker
                        ArmorDescriptorSides = ArmorDescriptor_Bunker
                        ArmorDescriptorRear = ArmorDescriptor_Bunker
                        ArmorDescriptorTop = ArmorDescriptor_Bunker
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'GEFYSDBHIA'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_Panzerstellung_R35'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_Panzerstellung_R35_37mm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'GEFYSDBHIA'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_R35_37mm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_R35_37mm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'GEFYSDBHIA'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_R35_37mm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_R35_37mm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_AT_Panzerstellung_S35_47mm_GER is TEntityDescriptor
(
    DescriptorId = GUID:{57ad4b84-42b5-4de8-9f24-504ccea35287}
    ClassNameForDebug = 'Bunker_AT_Panzerstellung_S35_47mm_GER'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT_Panzerstellung_S35'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_AT_Panzerstellung_S35_47mm_GER
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 45),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT_Panzerstellung_S35'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT_Panzerstellung_S35'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Bunker
                        ArmorDescriptorSides = ArmorDescriptor_Bunker
                        ArmorDescriptorRear = ArmorDescriptor_Bunker
                        ArmorDescriptorTop = ArmorDescriptor_Bunker
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'DQGITJDWOC'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT_Panzerstellung_S35'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Lourd",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_AT_Panzerstellung_S35_47mm_GER
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'DQGITJDWOC'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_S35_47mm_GER'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_S35_47mm_GER'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'DQGITJDWOC'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_AT_Panzerstellung_S35_47mm_GER'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_AT_Panzerstellung_S35_47mm_GER'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG42 is TEntityDescriptor
(
    DescriptorId = GUID:{0873d381-dedb-4824-9449-c40162e2ef8f}
    ClassNameForDebug = 'Bunker_HMG42'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG42
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMG42'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG42
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMG42'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMG42'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG42_AK is TEntityDescriptor
(
    DescriptorId = GUID:{900491b8-0d2f-4ab1-8acc-9a9cad139b63}
    ClassNameForDebug = 'Bunker_HMG42_AK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG42_AK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMG42'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG42_AK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMG42'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_AK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_AK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMG42'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_AK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_AK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG42_ROU is TEntityDescriptor
(
    DescriptorId = GUID:{2c210011-55eb-480d-97f3-d2024b695171}
    ClassNameForDebug = 'Bunker_HMG42_ROU'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG42_ROU
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ROU'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMG42'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG42_ROU
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMG42'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_ROU'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_ROU'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMG42'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_ROU'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_ROU'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG42_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{8e66b030-9e10-46c2-a030-8552ad19e3e9}
    ClassNameForDebug = 'Bunker_HMG42_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG42_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMG42'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG42_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMG42'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMG42'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG42_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG42_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG_Breda_ITA is TEntityDescriptor
(
    DescriptorId = GUID:{43aeb2c3-87a9-4cbb-9cbc-b3b0d48ea677}
    ClassNameForDebug = 'Bunker_HMG_Breda_ITA'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Breda_ITA'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG_Breda_ITA
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Breda_ITA'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Breda_ITA'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ITA'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'GRVOEFAOLK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Breda_ITA'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG_Breda_ITA
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'GRVOEFAOLK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_ITA'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_ITA'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ITA'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'GRVOEFAOLK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_ITA'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_ITA'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ITA'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG_Breda_RSI is TEntityDescriptor
(
    DescriptorId = GUID:{d86a5d4d-e5a4-4b63-8ea4-0a2da852e604}
    ClassNameForDebug = 'Bunker_HMG_Breda_RSI'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Breda_RSI'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG_Breda_RSI
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Breda_RSI'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Breda_RSI'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'RSI'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'XANWUILBJQ'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Breda_RSI'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG_Breda_RSI
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'XANWUILBJQ'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_RSI'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_RSI'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'XANWUILBJQ'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_RSI'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_RSI'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG_Breda_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{f389b47e-63ee-4bc0-9083-479ae8bc8354}
    ClassNameForDebug = 'Bunker_HMG_Breda_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Breda_YUG'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG_Breda_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Breda_YUG'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Breda_YUG'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'MHKKDVVYLC'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Breda_YUG'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG_Breda_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'MHKKDVVYLC'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'MHKKDVVYLC'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_Breda_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_Breda_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG_FR is TEntityDescriptor
(
    DescriptorId = GUID:{92d4b575-e113-4ed2-b421-d4579159cf60}
    ClassNameForDebug = 'Bunker_HMG_FR'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_M2HB_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG_FR
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 15),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_M2HB_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_M2HB_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FR'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMGFR'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_M2HB_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG_FR
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMGFR'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_FR'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_FR'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMGFR'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_FR'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_FR'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_HMG_US is TEntityDescriptor
(
    DescriptorId = GUID:{39926ea1-0a1b-4f36-9ff9-4f89e5fc5a51}
    ClassNameForDebug = 'Bunker_HMG_US'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_M2HB_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_HMG_US
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 15),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_M2HB_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_M2HB_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'US'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_HMGUS'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_M2HB_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_HMG_US
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_HMGUS'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_US'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_US'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_HMGUS'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_HMG_US'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_HMG_US'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_CAN is TEntityDescriptor
(
    DescriptorId = GUID:{2dad5d76-9e4e-4660-9414-203e48b1eef4}
    ClassNameForDebug = 'Bunker_MG_CAN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_CAN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'CAN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGCAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_CAN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGCAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_CAN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_CAN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_CAN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGCAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_CAN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_CAN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_CAN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_CZ is TEntityDescriptor
(
    DescriptorId = GUID:{4604c8cc-eec6-4197-86d9-9f3a5415715f}
    ClassNameForDebug = 'Bunker_MG_CZ'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_CZ
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'CZ'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGUK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_CZ
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGUK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_CZ'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_CZ'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_CZ'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGUK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_CZ'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_CZ'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_CZ'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_FR is TEntityDescriptor
(
    DescriptorId = GUID:{a105a9e2-13e4-4202-bacd-544697afd250}
    ClassNameForDebug = 'Bunker_MG_FR'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MMG_M1919_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_FR
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MMG_M1919_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MMG_M1919_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FR'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGFR'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MMG_M1919_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_FR
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGFR'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_FR'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_FR'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGFR'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_FR'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_FR'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FR'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_HON is TEntityDescriptor
(
    DescriptorId = GUID:{243baae4-4968-4eca-ae4a-6123abc22412}
    ClassNameForDebug = 'Bunker_MG_HON'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG_Schwarloze_HON'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_HON
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG_Schwarloze_HON'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG_Schwarloze_HON'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'HON'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_Schwz'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG_Schwarloze_HON'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_HON
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_Schwz'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_HON'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_HON'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_Schwz'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_HON'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_HON'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_HON'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_NZ is TEntityDescriptor
(
    DescriptorId = GUID:{134e5bd4-aba1-4350-80b9-3aec98e06882}
    ClassNameForDebug = 'Bunker_MG_NZ'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_NZ
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'NZ'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGCAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_NZ
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGCAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_NZ'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_NZ'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_NZ'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGCAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_NZ'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_NZ'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_NZ'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_POL is TEntityDescriptor
(
    DescriptorId = GUID:{72bd6d16-109a-4aee-b513-fa3c070813b6}
    ClassNameForDebug = 'Bunker_MG_POL'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_POL
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGCAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_POL
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGCAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_POL'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_POL'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGCAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_POL'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_POL'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_UK is TEntityDescriptor
(
    DescriptorId = GUID:{77d1cb43-384f-4201-b876-9eee6f32620c}
    ClassNameForDebug = 'Bunker_MG_UK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_UK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'UK'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGUK'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_UK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGUK'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_UK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_UK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_UK'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGUK'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_UK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_UK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_UK'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_US is TEntityDescriptor
(
    DescriptorId = GUID:{5b9874b4-b2d3-4838-aa5b-b1f82dc37f8c}
    ClassNameForDebug = 'Bunker_MG_US'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MMG_M1919_US'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_US
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MMG_M1919_US'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MMG_M1919_US'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'US'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGUS'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MMG_M1919_US'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_US
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGUS'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_US'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_US'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGUS'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_US'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_US'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_US'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_MG_Vickers_SA is TEntityDescriptor
(
    DescriptorId = GUID:{53ca9385-4188-4cce-9a8c-af331c840572}
    ClassNameForDebug = 'Bunker_MG_Vickers_SA'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_HMG_Vickers_UK'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_MG_Vickers_SA
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_HMG_Vickers_UK'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_HMG_Vickers_UK'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SA'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGCAN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_HMG_Vickers_UK'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_MG_Vickers_SA
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGCAN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_Vickers_SA'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_MG_Vickers_SA'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SA'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGCAN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_MG_Vickers_SA'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_MG_Vickers_SA'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SA'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_Maxim_AWP is TEntityDescriptor
(
    DescriptorId = GUID:{e6914984-9f0f-43df-8f59-368c922745ff}
    ClassNameForDebug = 'Bunker_Maxim_AWP'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG_Maxim_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_Maxim_AWP
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG_Maxim_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG_Maxim_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_Maxim'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG_Maxim_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_Maxim_AWP
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_Maxim'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_AWP'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_AWP'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_Maxim'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_AWP'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_AWP'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_Maxim_FIN is TEntityDescriptor
(
    DescriptorId = GUID:{284b7c9a-8c99-42e5-8f6d-54ab45511c9e}
    ClassNameForDebug = 'Bunker_Maxim_FIN'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG_Maxim_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_Maxim_FIN
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG_Maxim_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG_Maxim_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'FIN'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_MGFIN'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG_Maxim_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_Maxim_FIN
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_MGFIN'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_FIN'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_FIN'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_MGFIN'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_FIN'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_FIN'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_FIN'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_Maxim_SOV is TEntityDescriptor
(
    DescriptorId = GUID:{252f1684-4861-416c-a742-9f83eec14092}
    ClassNameForDebug = 'Bunker_Maxim_SOV'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_MG_Maxim_SOV'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_Maxim_SOV
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 5),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_MG_Maxim_SOV'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_MG_Maxim_SOV'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'SOV'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_Maxim'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_HMG",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_MG_Maxim_SOV'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerMG",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_Maxim_SOV
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_Maxim'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_SOV'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_SOV'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_Maxim'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_Maxim_SOV'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_HMG'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_Maxim_SOV'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_SOV'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_PaK_50mm is TEntityDescriptor
(
    DescriptorId = GUID:{0a734739-29e1-43a1-b69a-bef8382777de}
    ClassNameForDebug = 'Bunker_PaK_50mm'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_PaK_50mm
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'GER'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK38'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_PaK_50mm
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK38'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK38'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_GER'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_PaK_50mm_AK is TEntityDescriptor
(
    DescriptorId = GUID:{9cbf4ebf-c753-4c84-804a-776c60842565}
    ClassNameForDebug = 'Bunker_PaK_50mm_AK'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_PaK_50mm_AK
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'POL'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK38'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_PaK_50mm_AK
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK38'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_AK'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_AK'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK38'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_AK'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_AK'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_POL'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_PaK_50mm_ROU is TEntityDescriptor
(
    DescriptorId = GUID:{642ca432-536d-4090-a3f7-ed58711dcd89}
    ClassNameForDebug = 'Bunker_PaK_50mm_ROU'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_PaK_50mm_ROU
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'ROU'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK38'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_PaK_50mm_ROU
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK38'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_ROU'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_ROU'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK38'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_ROU'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_ROU'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_ROU'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_PaK_50mm_RSI is TEntityDescriptor
(
    DescriptorId = GUID:{31c99dcd-114f-4b43-a1aa-1b54ef20da15}
    ClassNameForDebug = 'Bunker_PaK_50mm_RSI'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_PaK_50mm_RSI
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'RSI'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'WEDIFQFHIP'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_PaK_50mm_RSI
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'WEDIFQFHIP'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_RSI'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_RSI'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'WEDIFQFHIP'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_RSI'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_RSI'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_RSI'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
export Descriptor_Unit_Bunker_PaK_50mm_YUG is TEntityDescriptor
(
    DescriptorId = GUID:{9ee50122-cf95-4817-9a78-29267c847073}
    ClassNameForDebug = 'Bunker_PaK_50mm_YUG'
    Modules = [
        // DefenseModule
        TDefenseModuleDescriptor(
            DefenseType                    = ~/EDefenseType/Bunker
            Amount                         = 1
            Angle                          = 0.00
            Radius                         = 150.00 * Metre
            ClearMeshesRadius              = 100.00 * Metre
            PlacementConstraints           = [
                ~/DefensePlacementConstraint_EnoughAvailableUnits,
                ~/DefensePlacementConstraint_EnoughCurrency,
                ~/DefensePlacementConstraint_IsInPlayableZone,
                ~/DefensePlacementConstraint_IsInDeploymentZone,
                ~/DefensePlacementConstraint_CheckAllowedTerrain,
                ~/DefensePlacementConstraint_TerrainDrop,
            ]
            AppliedTerrain                 = ETerrainType/Bloqueur0
            PatternName                    = 'Defense_Bunker_AT'
            ExtremityPatternName           = ''
        ),

        // DefenseCadavreGenerator
            TModuleSelector
            (
                Default        = TCadavreGeneratorModuleDescriptor
                (
                    CadavreDescriptor = ~/Descriptor_ProductionCadavre_Bunker_PaK_50mm_YUG
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // DefenseProduction
        TModernWarfareProductionModuleDescriptor(
            Factory                        = EDefaultFactories/Defense
            ProductionTime                 = 0
            ProductionRessourcesNeeded = MAP [
                (~/Resource_CommandPoints, 30),
            ]
            DownPayment                    = ~/SystemeDAchatCoutantParDefaut
            RaiseDynamicTagAtSpawn         = False
        ),

        // ApparenceModelModule
        ApparenceModel is TModuleSelector
        (
            Default        = TApparenceModelModuleDescriptor
            (
                PickableObject                        = True
                HideInNoFow                           = False
                CreateTimelyChannelOnlyOnFirstSight   = False
                Depiction = TTimelyReceiverFactoryCarrier
                (
                    DepictionTemplate = nil
                    ModifyLB                         = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                    (
                        SceneryDescriptorName      = 'Defense_Bunker_AT'
                        LevelBuildDescriptor       = ~/DefenseUnitLevelBuildViewDescriptor
                        RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                    )
                )
            )
            Selection      =
            [
                TModuleSelectorFilter
                (
                    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                    Descriptor = TApparenceModelModuleDescriptor
                    (
                        PickableObject = True
                        Depiction = TTimelyReceiverFactoryCarrier
                        (
                            DepictionTemplate = nil
                            ModifyLB  = TemplateTimelyDescriptorBatimentWithLevelDesignPattern_OnlyLevelBuild
                            (
                                SceneryDescriptorName = 'Defense_Bunker_AT'
                                LevelBuildDescriptor  = ~/DefenseUnitLevelBuildViewDescriptor
                                RenderStyleProviderDescriptor = ~/DefaultRenderStyleProvider
                            )
                        )
                    )
                ),
                ~/NilDescriptorIfCadavre
            ]
        ),

        // Damage
            TDamageModuleDescriptor
            (
                CommonDamageDescriptor = TDamageDescriptor
                (
                    SuppressDamagesRegenRatio = ~/Bunker_SuppressDamagesRegenRatioList
                    SuppressDamagesRegenRatioOutOfRange = ~/Bunker_SuppressDamagesRegenRatioOutOfRange
                    StunDamagesRegen = ~/Bunker_StunDamagesRegen
                    StunDamagesToGetStunned = ~/Bunker_StunDamagesToGetStunned
                    StunFreezesUnits = False
                    BlindageProperties = TBlindageProperties
                    (
                        ArmorDescriptorFront = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorSides = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorRear = ArmorDescriptor_Batiment_Lourd
                        ArmorDescriptorTop = ArmorDescriptor_Batiment_Lourd
                    )
                    MaxSuppressionDamages = ~/Bunker_MaxSuppressionDamages
                )
                MaxDamages = 30.0
                HitRollSize = 5.0
                HitRollECM = 0.0
                MaxHPForHUD = 30
                AutoOrientation = False
                IsTargetableAsBoat = False
                IsTargetableOutsideCenter = False
                SkipCadavreCreation  = True
                FxDoImpactOnUnit = True
                UseDamageMultiplierForFirePower = False
                UseTopArmorAgainstFire = False
                PhysicalDamageLevelsPack = ~/DamageLevelsPackDescriptor_Default_pack_paliers_degats_phy
                SuppressDamageLevelsPack = ~/DamageLevelsPackDescriptor_Infanterie_packSupp
                TypeForGroundDamageModifier = EGroundDamageModifierType/Undefined
            ),

        // OrderableModule
        TOrderableModuleDescriptor
        (
            CanShoot  = True
            CanStop   = True
        ),

        // TypeUnitModule
        TTypeUnitModuleDescriptor
        (
            TypeUnitValue                    = ETypeUnit/Undef
            MotherCountry                    = 'YUG'
        ),

        // VisibilityModule
        TModuleSelector
        (
            Default        = TVisibilityModuleDescriptor
            (
                AutoRevealType                  = EAutoRevealType/AutoRevealAllies
                UnitConcealmentBonus            = 6.0
                VisionUnitType                  = EVisionUnitType/AlwaysOnGround
                VisionObstructionType           = EVisionObstructionType/Vehicle
                GroundDissimulationModifierType = EGroundDissumulationModifierType/Ground
            )
            Selection = [~/NilDescriptorIfGhostOrCadavre]
        ),

        // Capacite
            TModuleSelector
            (
                Default        = TCapaciteModuleDescriptor
                (
                    DefaultSkillList = [
                        ~/Capacite_Reddition,
                    ]
                    PostOrderSkillList = MAP [
                    ]
                )
                Selection      = [ ~/NilDescriptorIfGhostOrCadavre ]
            ),

        // CubeAction
            TModuleSelector
            (
                Default        = TCubeActionModuleDescriptor
                (
                    CubeActionDescriptor = ~/CubeAction_Menu_Ordres_infs
                )
                Selection      = [
                    ~/NilDescriptorIfCadavre
                ]
            ),

        // Debug
            ~/DebugModuleDescriptor,

        // EffectApplier
            ~/EffectApplierModuleSelector,

        // Experience
            TModuleSelector
            (
                Default        = TExperienceModuleDescriptor
                (
                    ExperienceLevelsPackDescriptor = ~/ExperienceLevelsPackDescriptor_Experience_Infanterie
                    CanWinExperience = True
                    ExperienceGainBySecond = 0.0
                    KillExperienceBonus = 0.0
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // Flags
            TFlagsModuleDescriptor
            (
                InitialFlagSet =
                [
                    Flag_Detectable,
                    Flag_Selectionnable,
                    Flag_Batiment,
                    Flag_Highlightable,
                    Flag_Target,
                    Flag_Blessable,
                ]
            ),

        // GhostModule
            TModuleSelector
            (
                Default        = nil
                Selection      = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Ghost)
                        Descriptor = TGhostModuleDescriptor
                        (
                            TerrainsAndColorsForPlacementGhostFeedback = [
                            ]
                        )
                    )
                ]
            ),

        // GroupableUnit
            ~/GroupableUnitModuleSelector,

        // IAStrat
            TModuleSelector
            (
                Default        = TIAStratModuleDescriptor
                (
                    DatabaseId = 1
                    GameplayBehavior = EGameplayBehavior/Nothing
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // InfluenceMap
             ~/InfluenceDataModuleSelector,

        // InfluenceMap
             TModuleSelector
             (
                 Default = TInfluenceMapModuleDescriptor
                 (
                     InfluenceStrength = 0.3
                     MinimumInfluenceStrength = 0.1
                     StrengthDecayPerSecond = 0.01
                     PreventsDecayInZone = False
                 )
                 Selection = [ ~/NilDescriptorIfGhostOrCadavre ]
             ),

        // LinkTeam
            ~/LinkTeamModuleDescriptor,

        // Label
        TModuleSelector
        (
            Default        = TWargameLabelModuleDescriptor
            (
                IsBuilding           = True
                IsCommandementUnit   = False
                UnitName             = 'Bunk_PaK38'
                HintToken            = 'Bunker'
                IdentifiedTexture    = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Bunker_AT",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                UnidentifiedTexture  = TBUCKToolAlternativeValues_TUIValueTextureNameFromTEugBMutableInteger
                (
                    CommandNameTrigger = ~/SpecificCommandName/UpdateGUIFromIconType
                    Alterator = $/GUIOption/IconType
                    Values =
                    [
                        "Texture_RTS_H_Non_identifiee_Bunker",
                        "Texture_Non_identifiee_Defense",
                    ]
                )
                PositionHeightOffset = 1000.0
                PlatingValue         = 0
                APValue              = 0
                APValueBazooka       = False
                NbSoldiers           = 0
                IsParachutist        = False
            )
            Selection      = [  ~/NilDescriptorIfCadavreOrGhostNotForProd  ]
        ),

        // OrderDisplay
            ~/OrderDisplayModuleSelector,

        // PackSignaux
            ~/PackSignauxModuleSelector,

        // Position
            TModuleSelector
            (
                Default        = TPositionModuleDescriptor
                (
                    StickToGround              = True
                    InGeoDb                    = True
                    PorteurMustBeVisible       = True
                    MustUpdateZoneIndice       = False
                    ClampInWorld               = True
                    ClampOutMap                = False
                    HasNearlyNullBBox          = False
                    GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                    Radius                     = ((100) * Metre)
                    RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                    CameraFollower             = nil
                    LowAltitudeFlyingAltitude  = ((0) * Metre)
                    NearGroundFlyingAltitude   = ((0) * Metre)
                )
                Selection = [
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
                        Descriptor = TPositionModuleDescriptor
                        (
                            StickToGround              = True
                            InGeoDb                    = False
                            PorteurMustBeVisible       = True
                            MustUpdateZoneIndice       = False
                            ClampInWorld               = True
                            ClampOutMap                = False
                            HasNearlyNullBBox          = False
                            GfxDescriptorPorteur       = ~/GfxPorteurBatiment
                            Radius                     = ((100) * Metre)
                            RelativeScanningPosition   = ~/DecalageParDefautDuPointDeVision
                            CameraFollower             = nil
                            LowAltitudeFlyingAltitude  = ((0) * Metre)
                            NearGroundFlyingAltitude   = ((0) * Metre)
                        )
                    ),
                ]
            ),

        // InfluencePosition
        ~/InfluencePositionModuleDescriptor,

        // BuildingDescription
        TBuildingDescriptionModuleDescriptor
        (
            SymbolName                    = 'Defense_Bunker_AT'
            LevelBuildSymbolDatabaseProxy = $/M3D/Scene/LevelBuildSymbolDatabaseProxy
            Height                        = 10 * Metre
        ),

        // Scanner
            TModuleSelector
            (
                Default        = TReverseScannerWithIdentificationDescriptor
                (
                    VisibilityRollRule = TModernWarfareVisibilityRollRule
                    (
                        IdentifyBaseProbability     = 0.1
                        TimeBetweenEachIdentifyRoll = 2.0
                        VisibilityRuleDescriptor    = ~/StandardWargameVisibilityRollRule
                        DistanceMultiplierRule      = TModernWarfareDistanceMultiplierRollRuleDescriptor
                        (
                            MultiplicateurAPorteeMaximale            = DefaultMultiplicateurAPorteeMaximale
                            MultiplicateurAPorteeMinimale            = DefaultMultiplicateurAPorteeMinimale
                            Exposant                                 = DefaultExposant
                            MultiplicateurAPorteeMaximaleEnMouvement = DefaultMultiplicateurAPorteeMaximaleEnMouvement
                            MultiplicateurAPorteeMinimaleEnMouvement = DefaultMultiplicateurAPorteeMinimaleEnMouvement
                            ExposantEnMouvement                      = DefaultExposantEnMouvement
                        )
                    )
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Selection
        ~/TemplateSelectionModule,

        // ScannerConfiguration
            TModuleSelector
            (
                Default        = TScannerConfigurationDescriptor
                (
                    OpticsAltitudeConfig = ~/EVisionOpticsAltitudeConfig/DontUse
                    DoesNotCountInScannerAbsoluteMaxRange = False
                    PorteeVisionTBA = ((0.0) * Metre)
                    PorteeVisionFOW = ((0.0) * Metre)
                    DetectionTBA = ((12500) * Metre)
                    PorteeVision = ((12500) * Metre)
                    PorteeIdentification = 0.0
                    OpticalStrength = 250
                    OpticalStrengthAltitude = 60
                    UnitDetectStealthUnit = False
                    SpecializedDetections = MAP [
                        ( EVisionUnitType/AlwaysInHighAltitude, 12500.0 * Metre ),
                        ( EVisionUnitType/Boat, 12500.0 * Metre ),
                    ]
                    SpecializedOpticalStrengths = MAP [
                    ]
                    IgnoreObstacles = MAP []
                )
                Selection = [ ~/NilDescriptorIfCadavre ]
            ),

        // StateEngine
            TModuleSelector
            (
                Default        = TStateEngineModuleDescriptor
                (
                    InitialStateId = 'UnitIdle'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // StateEngineCompany
            TModuleSelector
            (
                Default        = TStateEngineCompanyModuleDescriptor
                (
                    InitialStateId = 'CompanyInit'
                    StateEngineUpdateMode = WorldControllerAccess_InWorld
                )
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // Tags
            TTagsModuleDescriptor
            (
                TagSet = [
                    "GagneXP",
                    "Defense_BunkerAT_Standard",
                ]
            ),

        // TargetManager
            ~/TargetManagerModuleSelector,

        // WeaponManager
        WeaponManager is
            TModuleSelector
            (
                Default        = $/GFX/Everything/WeaponDescriptor_Bunker_PaK_50mm_YUG
                Selection      = [~/NilDescriptorIfGhostOrCadavre]
            ),

        // UnitUI
            TModuleSelector
            (
                Default = TUnitUIModuleDescriptor
                (
                    HintToken = 'Bunker'
                    SpecialtiesList = [
                    ]
                    NameToken = 'Bunk_PaK38'
                    InfoPanelConfigurationToken = 'Default'
                    TypeSpecificToken = ''
                    ShowInMenu = True
                    IsAce = False
                    GenerateName = true
                    TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_YUG'
                    MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                    ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_YUG'
                    CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                    TypeStrategicCount = ETypeStrategicCount/NotCounted
                )
                Selection = [
                    NilDescriptorIfCadavre,
                    TModuleSelectorFilter
                    (
                        Condition  = TModuleSelectorCondition_ParamEquals_Integer
                        (
                            ParamId = ~/Parameter_ModuleCreationSelectionFilter
                            ParamValue = ~/ModuleCreationFilter_Ghost
                        )
                        Descriptor = TUnitUIModuleDescriptor
                        (
                            HintToken = 'Bunker'
                            NameToken = 'Bunk_PaK38'
                            InfoPanelConfigurationToken = 'Default'
                            TypeSpecificToken = ''
                            TopViewTexture = 'Texture_Unit_TopView_Bunker_PaK_50mm_YUG'
                            MenuIconTexture = 'Texture_RTS_H_Bunker_AT'
                            ButtonTexture = 'Texture_Button_Unit_Bunker_PaK_50mm_YUG'
                            CountryTexture = 'CommonTexture_MotherCountryFlag_YUG'
                            TypeStrategicCount = ETypeStrategicCount/NotCounted
                        )
                    )
                ]
            ),

    ]
)
