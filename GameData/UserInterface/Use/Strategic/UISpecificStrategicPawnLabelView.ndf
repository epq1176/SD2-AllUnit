// Liste d'icones à afficher à coté du label
UnitLabelIcon_Defense       is 0
UnitLabelIcon_Fortified     is 1
UnitLabelIcon_NoSupplied    is 2
UnitLabelIcon_Boxing        is 3
UnitLabelIcon_DenyArea      is 4

// L'etiquette d'un pion
// -----------------------------------------------

PawnLabelMainComponentDescriptor is BUCKSensibleAreaDescriptor
(
    ElementName = 'Background'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableOffset = [0.0, -50]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent

    Components =
    [
        ~/UpperLabelList,

        ~/MainLabelList,

        ~/LowerLabelList,
    ]
)

// Upper label List
// -----------------------------------------------

private IconeSize is 13
UnitLabelIconList is BUCKListDescriptor
(
    ElementName = 'LabelIconList'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, IconeSize]
    )

    Axis = ~/ListAxis/Horizontal

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'CanAttackIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )
                TextureToken = "UseStrategic_Labels_CanLaunchAttack"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'DefenseIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_FortificationEnCours"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'FortifyIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_Fortified"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'FortifyAntiAirInProgressIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_FortificationAntiAirEnCours"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'FortifyAntiAirIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_FortificationAntiAir"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'NoSuppliedIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'StationaryIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [1.0, 1.0]
                    AlignementToFather = [0.0, 0.5]
                    AlignementToAnchor = [0.0, 0.5]
                )

                TextureToken = "UseStrategic_Labels_Stationary"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'Terrain_TerrainUrbain'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_Terrain_TerrainUrbain"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'Terrain_TerrainBocageMoyen'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_Terrain_TerrainForet"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'BoxingIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_Boxing"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'DenyAreaIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_DenyArea"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextureDescriptor
            (
                ElementName = 'RecoAreaIcon'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [IconeSize, IconeSize]
                )

                TextureToken = "UseStrategic_Labels_RecoArea"
                TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
            )
        ),
    ]
)

// -----------------------------------------------

MainLabelList is TBUCKLocalLayerContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI()

    NbLayersToLock = 3
    ChildFitToContent = true

    FitStyle = ~/ContainerFitStyle/FitToContent

    Components =
    [
        BUCKListDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI()

            Axis = ~/ListAxis/Horizontal

            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
            ChildFitToContent = true

            Elements =
            [
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = BUCKTextureDescriptor
                    (
                        ElementName = 'UnitTexture'

                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            MagnifiableWidthHeight = [34.0,20.0]
                        )

                        HasBackground = true

                        TextureFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1.0, 1.0]
                        )
                    )
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/PANumber
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/CombatValue
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/UnitLabelIconList
                ),
            ]
        ),
    ]
)

// -----------------------------------------------

UpperLabelList is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.0, 1.0]
    )

    Axis = ~/ListAxis/Vertical
    LastMargin = TRTTILength(Magnifiable = 0.0)
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'EngagementPhase'
                ComponentFrame = TUIFramePropertyRTTI()

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )

                TextStyle = "UnlockingPhase"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Noir"
                TextSize = "40"
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'BombardedFeedback'
                ComponentFrame = TUIFramePropertyRTTI()

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )
                HasBackground = true
                BackgroundBlockColorToken = "SD2_Bombarded"

                TextStyle = "Default"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent
                TextPadding = TRTTILength4(Magnifiable = [2.0, 2.0, 2.0, 2.0])

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextToken = "LBS_BOMBED"
                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Noir"
                TextSize = "12"
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'InOrderFeedback'
                ComponentFrame = TUIFramePropertyRTTI()

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )
                HasBackground = true
                BackgroundBlockColorToken = "SD2_InOrder"

                TextStyle = "Default"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent
                TextPadding = TRTTILength4(Magnifiable = [2.0, 2.0, 2.0, 2.0])

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextToken = "LBS_BUSY"
                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Noir"
                TextSize = "12"
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'IncapacitatedFeedback'
                ComponentFrame = TUIFramePropertyRTTI()

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )
                HasBackground = true
                BackgroundBlockColorToken = "SD2_Routed"

                TextStyle = "Default"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent
                TextPadding = TRTTILength4(Magnifiable = [2.0, 2.0, 2.0, 2.0])

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextToken = "LBS_OOC"
                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Blanc184"
                TextSize = "12"
            )
        ),
    ]
)

// -----------------------------------------------

private PowerValueInfosText is BUCKTextDescriptor
(
    ElementName = 'PowerValueInfos'
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 20.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
    )

    HasBackground = true
    BackgroundBlockColorToken = "Red"

    HasBorder = true
    BorderLineColorToken = "PawnLabel/ActionPoints"
    BorderThicknessToken = "PawnLabel/ActionPoints"

    TextStyle = "ActionPoint"
    TextPadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/UserDefined

    TypefaceToken = "Main"
    BigLineAction = ~/BigLineAction/CutByDots

    TextDico = ~/LocalisationConstantes/dico_interface_ingame

    TextColor = "SD2_BlancPur"
    TextSize = "14"
)

// Under label List
// -----------------------------------------------

private CombatValue is BUCKListDescriptor
(
    ElementName = 'PowerValueGaugesContainer'

    ComponentFrame = TUIFramePropertyRTTI()

    Axis = ~/ListAxis/Vertical
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    // Sera remplit en cpp par les elements dans PowerValueElementDescriptors
    Elements = []
)

// -----------------------------------------------

private ArrowTexture is BUCKTextureDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [10, 10]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    TextureToken = "UseStrategic_Labels_Arrow"
    TextureFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
)

// -----------------------------------------------

private template SinglePowerValue
[
    ElementName : string = '',
    TextSize : string = '14',
] is BUCKTextDescriptor
(
    ElementName = <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 20.0]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
    )

    TextStyle = "ActionPoint"

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/UserDefined

    TypefaceToken = "Main"

    TextDico = ~/LocalisationConstantes/dico_interface_ingame

    TextColor = "SD2_BlancPur"
    TextSize = <TextSize>
)

// -----------------------------------------------

template StrategicPawnCoverBackground
[
    ElementName : string = '',
] is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
    )

    Components =
    [
        BUCKPolygonDescriptor
        (
            ElementName = <ElementName> + "CoverBackground"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            HasBackground = true
            BackgroundBlockColorToken = "DarkGreen"

            PolygonShape = PolygonShapeManual
            (
                Corners =
                [
                    [0.0, 0.0],
                    [1.0, 0.0],
                    [0.0, 1.0],
                ]
            )
        ),
        BUCKPolygonDescriptor
        (
            ElementName = <ElementName> + "DigInBackground"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            HasBackground = true
            BackgroundBlockColorToken = "Orange3"

            PolygonShape = PolygonShapeManual
            (
                Corners =
                [
                    [0.0, 1.0],
                    [1.0, 0.0],
                    [1.0, 1.0],
                ]
            )
        ),
    ]
)

// -----------------------------------------------

template CombatValueWithArrows
[
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI(),
    HasBackgroundAndBorders : bool = true,
    TextSize : string = '14',
] is BUCKListDescriptor
(
    ComponentFrame = <ComponentFrame>

    Axis = ~/ListAxis/Horizontal
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    HasBackground = <HasBackgroundAndBorders>
    BackgroundBlockColorToken = "Red"

    HasBorder = <HasBackgroundAndBorders>
    BorderLineColorToken = "PawnLabel/ActionPoints"
    BorderThicknessToken = "PawnLabel/ActionPoints"

    FirstMargin = TRTTILength(Magnifiable = 3.0)
    InterItemMargin = TRTTILength(Magnifiable = 2.0)
    LastMargin = TRTTILength(Magnifiable = 3.0)

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = SinglePowerValue
            (
                ElementName = "FirstPhaseValue"
                TextSize = <TextSize>
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/ArrowTexture
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = SinglePowerValue
            (
                ElementName = "SecondPhaseValue"
                TextSize = <TextSize>
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/ArrowTexture
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = SinglePowerValue
            (
                ElementName = "ThirdPhaseValue"
                TextSize = <TextSize>
            )
        ),
    ]

    BackgroundComponents =
    (<HasBackgroundAndBorders> ?
        [
            StrategicPawnCoverBackground(),
        ]
        : []
    )
)

// -----------------------------------------------

private PANumber is BUCKTextDescriptor
(
    ElementName = 'ActionPoints'
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [20.0, 20.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
    )

    HasBackground = true
    BackgroundBlockColorToken = "Red"

    HasBorder = true
    BorderLineColorToken = "PawnLabel/ActionPoints"
    BorderThicknessToken = "PawnLabel/ActionPoints"

    TextStyle = "ActionPoint"
    TextPadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])

    HorizontalFitStyle = ~/FitStyle/UserDefined
    VerticalFitStyle = ~/FitStyle/UserDefined

    TypefaceToken = "Main"
    BigLineAction = ~/BigLineAction/ResizeFont

    TextDico = ~/LocalisationConstantes/dico_interface_ingame

    TextColor = "SD2_BleuVariable"
    TextSize = "17"

    Components =
    [
    ]
)

// -----------------------------------------------

private PAComponent is BUCKSimpleGaugeDescriptor
(
    ElementName = 'ActionPointsGauge'

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToFather = [0.5, 1.0]
        AlignementToAnchor = [0.5, 0.0]
        MagnifiableWidthHeight = [43.0, 6.0]
    )

    HasBackground = true
    HasBorder = true
    BorderLineColorToken = "PawnLabel/ActionPoints"
    BorderThicknessToken = "PawnLabel/ActionPoints"
    BackgroundBlockColorToken = "GrisLabelStrat"

    DurationForGaugeFullChange = 0.5
    GaugeMax = 4

    GaugeComponentName = 'ActionPointGaugeComponent'

    Components =
    [
        BUCKSimpleGaugeValueDescriptor
        (
            ElementName = 'ActionPointGaugeComponent'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight    = [0.0, 1.0]
                AlignementToFather     = [0.0, 0.5]
                AlignementToAnchor     = [0.0, 0.5]
            )

            ValueContainerName = 'ActionPointGaugeContainer'

            ValueContainerComponent = BUCKContainerDescriptor
            (
                ElementName = 'ActionPointGaugeContainer'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [0.0, 1.0]
                )

                HasBackground = true
                BackgroundBlockColorToken = "LightGray80"

                HasBorder = true
                BorderLineColorToken = "SD2_Blanc184"
                BorderThicknessToken = "PawnLabel/ActionPoints"
            )
        ),
    ]
)

// -----------------------------------------------

private HeighCombatValueGauge is 7
template PowerValueRack
[
    GaugeName : string,
    BackgroundBlockColorToken : string,
    TextColorToken : string,
] is BUCKRackDescriptor
(
    ElementName = 'PowerValueRack_' + <GaugeName>

    ComponentFrame = TUIFramePropertyRTTI()

    Axis = ~/ListAxis/Horizontal

    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    BladeDescriptor = BUCKContainerDescriptor
    (
        ComponentFrame = TUIFramePropertyRTTI()

        UseLocalRenderLayer = true
        BackgroundLocalRenderLayer = 1
        LocalRenderLayer = 0
        BorderLocalRenderLayer = 2

        HasBackground = true
        BackgroundBlockColorToken = <BackgroundBlockColorToken>

        HasBorder = true
        BorderThicknessToken = "1"
        BorderLineColorToken = "Noir"

        FitStyle = ~/ContainerFitStyle/FitToContent

        Components =
        [
            BUCKTextDescriptor
            (
                ElementName = 'PowerValue'

                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [0.0, HeighCombatValueGauge]
                    PixelWidthHeight = [5, 0]
                )

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )

                TextPadding = TRTTILength4(Magnifiable = [3.0, 0.0, 3.0, 0.0])

                HorizontalFitStyle = ~/FitStyle/MaxBetweenUserDefinedAndContent
                VerticalFitStyle = ~/FitStyle/MaxBetweenUserDefinedAndContent

                TextStyle = "Default"
                TypefaceToken = "Main"

                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = <TextColorToken>
                TextSize = "9"
            ),
        ]
    )
)

// -----------------------------------------------

LowerLabelList is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToFather = [0.5, 1.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Vertical
    FirstMargin = TRTTILength(Pixel = 4.0)
    InterItemMargin = TRTTILength(Magnifiable = 0.0)
    LastMargin = TRTTILength(Magnifiable = 0.0)
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    Elements =
    [   BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'UnitName'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    AlignementToFather = [0.5, 0.0]
                    AlignementToAnchor = [0.5, 0.0]
                )

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )
                TextPadding = TRTTILength4(Magnifiable = [2.0, 2.0, 2.0, 2.0])
                TextStyle = "Default"
                HasBackground = true
                BackgroundBlockColorToken = "SD2_Gris39_avecTransparence200"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Blanc184"
                TextSize = "12"
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ElementName = 'FleeingFeedback'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    AlignementToFather = [0.5, 0.0]
                    AlignementToAnchor = [0.5, 0.0]
                )

                ParagraphStyle = TParagraphStyleRTTI
                (
                    Alignment = UIText_Center
                    VerticalAlignment = UIText_VerticalCenter
                )
                HasBackground = true
                BackgroundBlockColorToken = "SD2_Routed"

                TextStyle = "Default"
                HorizontalFitStyle = ~/FitStyle/FitToContent
                VerticalFitStyle = ~/FitStyle/FitToContent
                TextPadding = TRTTILength4(Magnifiable = [2.0, 2.0, 2.0, 2.0])

                TypefaceToken = "Main"
                BigLineAction = ~/BigLineAction/CutByDots

                TextToken = "LBS_FLEE"
                TextDico = ~/LocalisationConstantes/dico_interface_ingame

                TextColor = "SD2_Blanc184"
                TextSize = "12"
            )
        ),
    ]
)

// -----------------------------------------------

private PowerRacksToShow is
[
    PowerValueRack
    (
        GaugeName = "Assault"
        BackgroundBlockColorToken = "Strategic/PawnPower/AssaultTop"
        TextColorToken = "PureBlack"
    ),
    PowerValueRack
    (
        GaugeName = "Armored"
        BackgroundBlockColorToken = "Strategic/PawnPower/ArmoredTop"
        TextColorToken = "PureBlack"
    ),
    PowerValueRack
    (
        GaugeName = "Artillery"
        BackgroundBlockColorToken = "Strategic/PawnPower/ArtilleryTop"
        TextColorToken = "PureBlack"
    ),
]

UISpecificStrategicPawnLabelViewDescriptor is PawnLabelViewDescriptor
(
    MainComponentDescriptor = ~/PawnLabelMainComponentDescriptor
)

// -----------------------------------------------

template PawnLabelViewDescriptor
[
    MainComponentDescriptor : TBUCKContainerDescriptor,
] is TUISpecificStrategicPawnLabelViewDescriptor
(
    MainComponentDescriptor = <MainComponentDescriptor> // Doit contenir tout les composants ! (pour des raisons d'opti)
    MainComponentContainerUniqueName = "" // Permet d'indiquer l'endroit ou le composant doit s'insérer

    FightingPawnEngagementPhaseTextColor    = "PawnPhaseFighting"
    NonFightingPawnEngagementPhaseTextColor = "PawnPhaseNotFighting"

    EngagementPhaseAttackedToken = "LABEL_ATT"

    IAPhaseToLabel =
    [
        //Can engage battle
        [
            "LABEL_PHAA",
            "LABEL_PHAB",
            "LABEL_PHAC",
            "LABEL_FORC",
        ],
        //Cannot engage battle
        [
            "LABEL_SUPA",
            "LABEL_SUPB",
            "LABEL_SUPC",
            "LABEL_SUPF",
        ]
    ]

    PawnPowerDisplayModesToUse =
    [
        EPawnPowerDisplayMode/PowerDisplayAllPhasesTotal,                 // affichage de la valeur avec des 4 / 1 / 3
        EPawnPowerDisplayMode/PowerDisplayAllPhases,                      // affichage de la matrice
        EPawnPowerDisplayMode/PowerDisplayTotal,                          // valeur totale 1 seul nombre
    ]

    EngagementPhaseAnimDuration = 3 // Durée de l'animation de grossissement, en secondes
    EngagementPhaseAnimScale = 0.1 // L'échelle va varier de 1 à (1+EngagementPhaseAnimScale). Négatif autorisé
    EngagementPhaseAnimRandomStart = 0.5 // Décalage aléatoire max en secondes au démarrage.
    LabelTransparencyIfNoEngagementPhase = 0.2 //Transparence de l'étiquette des unités qui ne peuvent pas participer au combat (cf. CantFightUnitAlpha)

    NoSupplyTextureMap = MAP
    [
        (EStrategicOutOfSupplyState/HasSupply,                  "UseStrategic_Labels_NoSupplyZerosDay"),
        (EStrategicOutOfSupplyState/OutOfSupply_HalfDay,        "UseStrategic_Labels_NoSupplyHalfDay"),
        (EStrategicOutOfSupplyState/FullyOutOfSupply,           "UseStrategic_Labels_NoSupply"),
        (EStrategicOutOfSupplyState/OutOfSupplyRouted,          "UseStrategic_Labels_NoSupply"),
    ]

    PowerValueElementDescriptors = MAP
    [
        (
            EPawnPowerDisplayMode/PowerDisplayTotal,
            [
                ~/PowerValueInfosText
            ]
        ),
        (
            EPawnPowerDisplayMode/PowerDisplayAllPhasesTotal,
            [
                CombatValueWithArrows()
            ]
        ),
        (
            EPawnPowerDisplayMode/PowerDisplayAllPhases,
            ~/PowerRacksToShow
        ),
    ]
)
