//RefMagnification is 4. div 3.

export InGameResourceWargame2 is TUISpecificInGameResources
(
    UILayer                     = $/UserInterface/UILayer_2DInterface_InGame
    UILayerLDHint               = $/UserInterface/UILayer_2DInterfaceLDHint
    CommonResources             = ~/UICommonResource

    MainStyleGuides             = [
        ~/DefaultStyleGuide,
    ]

    ViewDescriptors = MAP
    [
        ("UISpecificIngameHUDTransportAndUnitsInfoViewDescriptor", ~/UISpecificInGameHUDTransportAndUnitsInfoViewDescriptor),
        ("UISpecificUnitInfoPanelViewDescriptor", UISpecificUnitInfoPanelViewDescriptor( MainComponentFrame = TUIFramePropertyRTTI() )),
        ("SkirmishProductionMenu", ~/UISpecificSkirmishProductionMenuViewDescriptor),
        ("SkirmishFromStrategicProductionMenu", ~/UISkirmishFromStrategicProductionMenuViewDescriptor),
        ("MenuButtonDescriptor", ~/UISpecificMenuButtonViewDescriptor),
        ("UIUnitLabelAggregateViewDescriptor", ~/UISpecificInGameUnitLabelAggregateViewDescriptor),
        ("InGameUnitLabel", ~/UISpecificUnitLabelViewDescriptor),
        ("UICommonFlarePanelViewDescriptor", ~/UICommonFlarePanelViewDescriptor),
        ("UISpecificUnitLabelAggregationViewDescriptor", ~/UISpecificUnitLabelAggregationViewDescriptor),
        ("UISpecificTacticCubeActionViewDescriptor", ~/UISpecificTacticCubeActionViewDescriptor),
        ("UISpecificTacticEngagementRulesViewDescriptor", ~/UISpecificTacticEngagementRulesViewDescriptor),
        ("UISpecificInGameHUDTimePanelViewDescriptor", ~/UISpecificInGameHUDTimePanelViewDescriptor),
        ("UICommonHUDPingDisplayViewDescriptor", ~/UICommonHUDPingDisplayViewDescriptor),
        ("UIDisplayStartingInformationViewDescriptor", ~/UISpecificDisplayStartingInformationViewDescriptor),
        ("UIAutoDeployViewDescriptor", ~/UISpecificAutoDeployViewDescriptor),
        ("UIUnitComparatorSelector", ~/UISpecificUnitComparatorSelectorViewDescriptor),
    ]

    MainContainerResource       = ~/InGameMainContainerResource
    ShortcutUserInputLayer      = $/M3D/Input/UserInputLayerHandler/InputLayer_InGameShortcuts

    CommonHUDResources          = ~/InGameHUDResource
    HUDResource                 = ~/InGameHUDResource
    ChatResource                = ~/GameplayChatResources
    LabelResource               = ~/SpecificInGameLabelResource
    AutoKickPanelResource       = ~/InGameAutoKickPanelresource
    LDHintResource              = ~/SpecificInGameLDHintResource
    GhostResources              = ~/InGameGhostResources
    FlareLabelResources         = ~/CommonFlareLabelResources
    PlayerMissionLabelResources = ~/SpecificInGamePlayerMissionLabelResources
    GabaritResources            = ~/CommonGabaritResources
    ZoCResources                = ~/CommonZoCResources
    UnitLabelResource           = ~/SpecificInGameUnitLabelResources
    OutmapFeedbackResource      = ~/UISpecificOutmapFeedbackResources
    FeedbackLineOfSightResource = ~/FeedbackLineOfSightResource
    WarningPanelResources       = ~/WarningPanelResources
    LabelsOnMapResources        = ~/labelsOnMapResources
    ObjectivesResource          = ~/IngameObjectivesResources
    GameRulesHelper             = ~/GameRulesHelper

    SelectionHandlerInGameResources = ~/SelectionResources
    GroupSelectionReminderResources = ~/GroupSelectionReminder
    MousePolicyManagerResources = ~/MousePolicyManagerResources
    OptionsManager              = $/GameOptionsInterface/GameOptionsInterfaceWrapper

    DelayAlertResource          = ~/delayAlertResource

    SubtitleLayer               = $/UserInterface/UILayer_HintsAndSubtitles

    DefenseResources       = ~/DefenseResources

    CommanderResources = ~/CommanderResources
)

InGameMainContainerResource is TUICommonMainContainerResource
(
    RefMagnification = ~/RefMagnification
    ContentRefSize = [ 2134 , 1440 ]
    SafeBoxMin     = [  107 ,   80 ]
    SafeBoxSize    = [ 1920 , 1200 ]

    ForegroundComponents = BUCKContainerDescriptor
    (
        ComponentFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1,1] )

        Components =
        [
            BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [1.0, 1.0]
                )

                Components =
                [
                    BUCKContainerDescriptor
                    (
                        UniqueName = "SpecificInGameHUDProductionViewMainContainer"
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1.0, 0.0]
                        )

                        FitStyle = ~/ContainerFitStyle/FitToContentVertically
                    ),

                    BUCKContainerDescriptor
                    (
                        UniqueName = "SpecificAutoDeployMainComponentDescriptor"
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1.0, 0.0]
                            AlignementToFather = [0.5, 0.0]
                            AlignementToAnchor = [0.5, 0.0]
                        )

                        FitStyle = ~/ContainerFitStyle/FitToContentVertically
                    ),

                    BUCKListDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            AlignementToFather = [0.5, 0.25]
                            AlignementToAnchor = [0.5, 0.25]
                        )

                        Axis = ~/ListAxis/Vertical

                        Elements =
                        [
                            BUCKListElementDescriptor
                            (
                                ExtendWeight = 1.0
                                ComponentDescriptor = BUCKContainerDescriptor
                                (
                                    UniqueName = "SpecificDisplayStartingInformationMainComponentDescriptor"
                                    ComponentFrame = TUIFramePropertyRTTI
                                    (
                                        RelativeWidthHeight = [1.0, 1.0]
                                    )
                                )
                            ),
                        ]
                    ),

                    BUCKListDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [0.0, 1.0]
                        )

                        Axis = ~/ListAxis/Horizontal
                        LastMargin = TRTTILength( Magnifiable = 10.0 )
                        Elements =
                        [
                            BUCKListElementDescriptor
                            (
                                ExtendWeight = 1.0
                                ComponentDescriptor = BUCKContainerDescriptor
                                (
                                    UniqueName = "UnitContainerListScrollingContainerContainer"
                                    ComponentFrame = TUIFramePropertyRTTI
                                    (
                                        RelativeWidthHeight = [1.0, 1.0]
                                    )
                                )
                            ),

                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = BUCKListDescriptor
                                (
                                    ComponentFrame = TUIFramePropertyRTTI()

                                    Axis = ~/ListAxis/Vertical
                                    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

                                    FirstMargin = TRTTILength( Magnifiable = 6.0 )
                                    Elements =
                                    [
                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = BUCKContainerDescriptor
                                            (
                                                UniqueName = "UISpecificMiniMapInfoViewMainContainer"
                                                ComponentFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 0.0] )
                                                FitStyle = ~/ContainerFitStyle/FitToContentVertically
                                            )
                                        ),

                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = BUCKContainerDescriptor
                                            (
                                                UniqueName = "SpecificInGameHUDTimePanelViewMainContainer"
                                                ComponentFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 0.0] )
                                                FitStyle = ~/ContainerFitStyle/FitToContentVertically
                                            )
                                        ),

                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = ~/ScorePanel
                                            ExtendWeight = 1.0
                                        ),

                                        BUCKListElementDescriptor
                                        (
                                            // SelectionPanel dummy pour adapter ta taille du ScorePanel a la r√©solution
                                            ComponentDescriptor = BUCKContainerDescriptor
                                            (
                                                ComponentFrame = TUIFramePropertyRTTI
                                                (
                                                    RelativeWidthHeight = [1.0, 0.0]
                                                    MagnifiableWidthHeight = [0.0, 340.0]
                                                )
                                            )
                                        ),
                                    ]
                                )
                            )
                        ]
                    ),
                ]
            ),

            BUCKListDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    AlignementToFather = [ 0.5, 1.0 ]
                    AlignementToAnchor = [ 0.5, 1.0 ]
                )

                Axis = ~/ListAxis/Vertical
                BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
                Elements =
                [
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKContainerDescriptor
                        (
                            UniqueName = "UISpecificHUDMultiSelectionPanelView"
                            ComponentFrame = TUIFramePropertyRTTI()
                            FitStyle = ~/ContainerFitStyle/FitToContent
                        )
                    ),

                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKContainerDescriptor
                        (
                            UniqueName = "UISpecificUnitSelectionPanelView"
                            ComponentFrame = TUIFramePropertyRTTI
                            (
                                AlignementToFather = [ 0.5, 0.0 ]
                                AlignementToAnchor = [ 0.5, 0.0 ]
                            )
                            FitStyle = ~/ContainerFitStyle/FitToContentVertically
                        )
                    ),
                ]
            ),

            BUCKListDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    AlignementToFather = [ 1.0, 1.0 ]
                    AlignementToAnchor = [ 1.0, 1.0 ]
                    MagnifiableOffset = [ -10.0, 0.0 ]
                )

                Axis = ~/ListAxis/Vertical
                BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
                Elements =
                [
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKContainerDescriptor
                        (
                            UniqueName = "FlareEditableTextContainer"
                            ComponentFrame = TUIFramePropertyRTTI
                            (
                                RelativeWidthHeight = [1.0, 0.0]
                            )

                            FitStyle = ~/ContainerFitStyle/FitToContentVertically
                        )
                    ),
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKContainerDescriptor
                        (
                            UniqueName = "UISpecificTacticCubeActionViewMainContainer"
                            ComponentFrame = TUIFramePropertyRTTI()
                            FitStyle = ~/ContainerFitStyle/FitToContent
                        )
                    ),
                ]
            )
        ]
    )
)

MousePolicyManagerResources is TUISpecificMousePolicyManagerResources
(
    KeyBoardPresetUpdater   = $/KeyboardPreset/KeyboardPresetUpdater
    Camera                  = $/M3D/Camera/CameraPrincipale
    World3D                 = $/M3D/Scene/DefaultWorld
    Scene3D                 = $/M3D/Scene/Scene_2D_Interface

    MouseWidgetSelectorForGhost = $/UI/Components/MouseWidgetSelector_Ghost
    DefaultMouseWidgetSelector = $/UI/Components/MouseWidgetSelectorDefault
    MouseWidgetSelectorForDefenseLine = $/UI/Components/DefenseLineMouseWidgetSelector
)


template TTacticalFeedbackUICommonGabaritDefinition
[
    CircleThickness : float = 1.0,
    CircleColor : color,
    TextStyle : TTextStyleRTTI,
    Effect : int = ~/FeedbackEffectMode/Dotted
]
is TUICommonGabaritDefinition
(
    CircleThickness = <CircleThickness>
    CircleColor = <CircleColor>
    TextStyle = <TextStyle>
    Effect = <Effect>
)

export TacticalFeedbackAreaOfEffectRangeGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [216,80,73,255]
    CircleThickness = 800.0
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,128, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,128, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)
export TacticalFeedbackAreaOfEffectRadiusGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [160,250,250,255]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,128, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,128, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)
export TacticalFeedbackSplashGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [255,128, 0,96]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,128, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,128, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)

export TacticalFeedbackCapacityGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [128,128, 0,96]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [0,255, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [0,255, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)

export TacticalFeedbackDispersionGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [255,0, 0,96]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,0, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,0, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [0,0, 0,255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)

export TacticalFeedbackMinRangeGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [255,0, 0,96]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,0, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,0, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)

export TacticalFeedbackMaxRangeGabaritResource is TTacticalFeedbackUICommonGabaritDefinition
(
    CircleColor = [255,0, 0,96]
    TextStyle       = TTextStyleRTTI
    (
        FontSize    = 16 //20
        ColorBottom = [255,0, 0,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,0, 0,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 0, 0, 0, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
    )
)

template TTacticalFeedbackUICommonZoCDefinition
[
    ColorToken : string,
    Effect : int = ~/FeedbackEffectMode/Solid,
    Thickness : float = 800.0
]
is TUICommonZoCDefinition
(
    ColorToken = <ColorToken>
    Effect = <Effect>
    Thickness = <Thickness>
)

export FeedbackDefenseNoGoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'DefenseNoGoZone'
)

export FeedbackBlockGroundNoGoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'BlockGroundNoGoZone'
)

export FeedbackDisabledNoGoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'DisabledNoGoZone'
)

export FeedbackSlowGroundNoGoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'SlowGroundNoGoZone'
)

export FeedbackAirNoGoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'AirNoGoZone'
    Effect = ~/FeedbackEffectMode/Solid
    Thickness = 2000
)

export FeedbackRecoZoneResource is TTacticalFeedbackUICommonZoCDefinition
(
    ColorToken = 'RecoZone'
    Thickness = 1100
)

InGameGhostResources is TUICommonInGameGhostResources
(
    MinRangeGabarit      = ~/TacticalFeedbackMinRangeGabaritResource
    MaxRangeGabarit      = ~/TacticalFeedbackMaxRangeGabaritResource
    CapacityRangeGabarit = ~/TacticalFeedbackCapacityGabaritResource

    TypeFace = $/M3D/Typefaces/Typeface3D_Bold
    ParagrapheStyle = TParagraphStyleRTTI
    (
        Alignment         = UIText_Center
        VerticalAlignment = UIText_VerticalCenter // UIText_FirstBaseLine
        InterLine         = 0
        //LineWidth         = 230 //  121 - 14 = 107    + 126 = 233
        //MaxLine           = 1
        //BigWordAction = 3 // BigWordLetRun (cf .cpp)
    )
    TextStyle = TTextStyleRTTI
    (
        FontSize    = 1 //20
        ColorBottom = [255,255, 255,255] //ColorBottom = [120, 120, 120, 255]
        ColorUp     = [255,255, 255,255] //ColorUp     = [240, 240, 240, 255]
        ColorStroke = [ 255, 255, 255, 255] //ColorStroke = [  0,   0,   0, 255]
        Stroke = false
        AllowSmallFont = true
    )
)

CommonGabaritResources is TUICommonGabaritResources
(
    World3D = $/M3D/Scene/DefaultWorld
    Scene3D = $/M3D/Scene/Scene_2D_Interface
    Camera = $/M3D/Camera/CameraPrincipale
    AreaOfEffectRangeGabarit     = $/UI/Components/TacticalFeedbackAreaOfEffectRangeGabaritResource
    AreaOfEffectRadiusGabarit    = $/UI/Components/TacticalFeedbackAreaOfEffectRadiusGabaritResource
    SplashGabarit                = $/UI/Components/TacticalFeedbackSplashGabaritResource
    CapacityGabarit              = $/UI/Components/TacticalFeedbackCapacityGabaritResource
    DispersionGabarit            = $/UI/Components/TacticalFeedbackDispersionGabaritResource
    MinRangeGabarit              = $/UI/Components/TacticalFeedbackMinRangeGabaritResource
    MaxRangeGabarit              = $/UI/Components/TacticalFeedbackMaxRangeGabaritResource
)

CommonZoCResources is TUICommonZoCResources
(
    DefenseNoGoZone = $/UI/Components/FeedbackDefenseNoGoZoneResource
    BlockGroundNoGoZone = $/UI/Components/FeedbackBlockGroundNoGoZoneResource
    SlowGroundNoGoZone = $/UI/Components/FeedbackSlowGroundNoGoZoneResource
    DisabledNoGoZone = $/UI/Components/FeedbackDisabledNoGoZoneResource
    AirNoGoZone = $/UI/Components/FeedbackAirNoGoZoneResource
    RecoZone = $/UI/Components/FeedbackRecoZoneResource
)