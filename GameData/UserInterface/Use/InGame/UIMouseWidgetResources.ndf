//--------------------------------------------------------
// MouseWidget Selectors
//--------------------------------------------------------

private textModuleGreen is [142,229,99,255]
private textModuleRed is [232,56,52,255]
private textModuleWhite is [232,232,232,255]

export MouseWidgetSelector_DefaultOrder is TUIMouseWidgetSelector_DefaultOrder
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/DefaultMouseWidget),
        (Cursor_None             , ~/MouseWidget_Blank),
        (Cursor_OrderAlly        , ~/MouseWidget_OrderAlly),
        (Cursor_OrderEnemy       , ~/MouseWidget_OrderEnemy),
        (Cursor_OrderInvalid     , ~/MouseWidget_OrderInvalid),
        (Cursor_OrderNeutralLand , ~/MouseWidget_OrderNeutralLand),
        (Cursor_OrderPlayer      , ~/MouseWidget_OrderPlayer),
        (Cursor_SelectAlly       , ~/MouseWidget_SelectAlly),
        (Cursor_SelectEnemy      , ~/MouseWidget_SelectEnemy),
        (Cursor_SelectInvalid    , ~/MouseWidget_SelectInvalid),
        (Cursor_SelectNeutralLand, ~/MouseWidget_SelectNeutralLand),
        (Cursor_SelectPlayer     , ~/MouseWidget_SelectPlayer)
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Bonus        , "WidgetSelector/Bonus"),
        (TextStyle_WithinRange  , "WidgetSelector/WithinRange"),
        (TextStyle_OutOfRange   , "WidgetSelector/OutOfRange"),
        (TextStyle_Unseen       , "WidgetSelector/Unseen"),
        (TextStyle_Blocked      , "WidgetSelector/Blocked"),
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]

    AirplaneMissionArrowDescriptor = AirplaneMissionArrowDescriptor
)

export MouseWidgetSelector_Attack is TUIMouseWidgetSelector_Attack
(
    MouseWidgetList = MAP
    [
        (Weapon_Cursor_AirMissile        , ~/MouseWidget_AirMissile),
        (Weapon_Cursor_CorrectedArtillery, ~/MouseWidget_Artillery),
        (Weapon_Cursor_Canon             , ~/MouseWidget_Canon),
        (Weapon_Cursor_FastCanon         , ~/MouseWidget_FastCanon),
        (Weapon_Cursor_Forbidden         , ~/MouseWidget_Forbidden),
        (Weapon_Cursor_GroundMissile     , ~/MouseWidget_GroundMissile),
        (Weapon_Cursor_MachineGun        , ~/MouseWidget_MachineGun),
        (Weapon_Cursor_None              , ~/MouseWidget_None),
        (Weapon_Cursor_Outmap            , ~/DefaultMouseWidget),
        (Weapon_Cursor_SuppressionFire   , ~/MouseWidget_SuppressionFire),
        (Weapon_Cursor_UnguidedMissile   , ~/MouseWidget_UnguidedMissile),
        (Weapon_Cursor_Inefficient       , ~/MouseWidget_Inefficient)
    ]

    WeaponCursorColorList = MAP
    [
        (CursorColor_Default    , ~/textModuleGreen),
        (CursorColor_Inefficient, ~/textModuleWhite),
        (CursorColor_OutOfRange , ~/textModuleRed),
        (CursorColor_Unseen     , ~/textModuleRed),
        (CursorColor_Blocked    , ~/textModuleRed),
        (CursorColor_Invalid    , ~/textModuleRed)
    ]

    WritingDuration = 2.0
    BlinkingInterval = 1.0

    TypeFace = "Second"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 1
    )

    TextStyleList = MAP
    [
        (TextStyle_Bonus        , "Default"),
        (TextStyle_WithinRange  , "Default"),
        (TextStyle_OutOfRange   , "Default"),
        (TextStyle_Unseen       , "Default"),
        (TextStyle_Blocked      , "Default"),
        (TextStyle_Invalid      , "Default"),
        (TextStyle_NotEfficient , "WidgetSelector/NotEfficient"),
    ]

    LoSResource = TUITacticalShootingLoSResource
    (
        VisionLineBlockedColor = d3drgba[117, 255, 255, 32]
        VisionLineInefficientColor = d3drgba[233, 93, 10, 8]
        VisionLineOutOfRangeColor = d3drgba[117, 255, 255, 32]
        VisionLineUnSeenColor = d3drgba[117, 255, 255, 32]
        VisionLineVisibleAndShootableColor = d3drgba[117, 255, 255, 128]
        //~~~~~~~~
        DashedLineSize = 5000
        MeshMaterialLine = $/M3D/Shader/MeshMaterialLoS
        RenderLayerLine = $/M3D/Scene/Scene3D_AfterPostProcess/debugInfo/Render/Calque_DebugInfo_Line
    )

    UnitComparatorStates =
    [
        TMouseWidgetUnitComparatorState
        (
            MaxRatioValue = 0.0
            //Typeface = 'Second'
            Token = "CMP_IMPOS"
            TextStyle = "Default"
            TextColor = "VividRed"
        ),
        TMouseWidgetUnitComparatorState
        (
            MaxRatioValue = 0.4
            Token = "CMP_VHARD"
            TextStyle = "Default"
            TextColor = "Orange7"
        ),
        TMouseWidgetUnitComparatorState
        (
            MaxRatioValue = 0.8
            Token = "CMP_HARD"
            TextStyle = "Default"
            TextColor = "Orange3"
        ),
        TMouseWidgetUnitComparatorState
        (
            MaxRatioValue = 1.2
            Token = "CMP_BALAN"
            TextStyle = "Default"
            TextColor = "JauneLeger2"
        ),
        TMouseWidgetUnitComparatorState
        (
            MaxRatioValue = 1.8
            Token = "CMP_EASY"
            TextStyle = "Default"
            TextColor = "Green2"
        ),
        TMouseWidgetUnitComparatorState
        (
            Token = "CMP_VEASY"
            TextStyle = "Default"
            TextColor = "Green3"
        ),
    ]
)

MouseWidgetSelector_Ghost is TUIMouseWidgetSelector_Ghost
(
    MouseWidgetList = MAP
    [
        (Cursor_None,                   ~/MouseWidget_Blank),
        (Cursor_Default,                ~/DefaultMouseWidget),
        (Cursor_Ghost,                  ~/MouseWidget_Ghost),
        (Cursor_SelectNeutralLand,      ~/MouseWidget_SelectNeutralLand),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Bonus        , "WidgetSelector/Bonus"),
        (TextStyle_Blocked      , "WidgetSelector/Blocked"),
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]

    SpawnUnitArrowDescriptor = SpawnUnitArrowDescriptor
)

export MouseWidgetSelector_Capacity is TUIMouseWidgetSelector_Capacity
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/DefaultMouseWidget),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)

export MouseWidgetSelector_AIAttack is TUIMouseWidgetSelector_Capacity
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/MouseWidget_OrderAIAttack),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)

export MouseWidgetSelector_AIArtilleryFocus is TUIMouseWidgetSelector_Capacity
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/MouseWidget_OrderAIArtilleryFocus),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)

template Template_MouseWidgetSelector_SimpleCursor
[
    DefaultCursorWidget  = ~/DefaultMouseWidget,
]
is TUIMouseWidgetSelector_SimpleCursor
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , <DefaultCursorWidget>),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)

template Template_MouseWidgetSelector_SimpleCursorWithTerrainFeedback
[
    DefaultCursorWidget  = ~/DefaultMouseWidget,
    CursorWidgetWithTerrainFeedback = ~/DefaultMouseWidget,
]
is TUIMouseWidgetSelector_SimpleCursorWithTerrainFeedback
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , <DefaultCursorWidget>),
        (Cursor_SelectNeutralLand, <CursorWidgetWithTerrainFeedback>),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)

export MouseWidgetSelector_MoveFast is Template_MouseWidgetSelector_SimpleCursorWithTerrainFeedback
(
    DefaultCursorWidget = ~/MouseWidget_OrderMoveFast
    CursorWidgetWithTerrainFeedback = ~/MouseWidget_OrderMoveFast_WithTerrainFeedback
)

export MouseWidgetSelector_Reverse is Template_MouseWidgetSelector_SimpleCursorWithTerrainFeedback
(
    DefaultCursorWidget = ~/MouseWidget_OrderReverse
    CursorWidgetWithTerrainFeedback = ~/MouseWidget_OrderReverse_WithTerrainFeedback
)

export MouseWidgetSelector_MoveAndAttack is TUIMouseWidgetSelector_MoveAndAttack
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/MouseWidget_OrderMoveAndAttack),
        (Cursor_SelectNeutralLand, ~/MouseWidget_OrderMoveAndAttack_WithTerrainFeedback),
        (Cursor_None             , ~/MouseWidget_Blank),
    ]

    WritingDuration = 2.0

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]

    MouseWidgetSelectorAttack = ~/MouseWidgetSelector_Attack
)

export MouseWidgetSelector_UnloadAtPosition is Template_MouseWidgetSelector_SimpleCursorWithTerrainFeedback
(
    DefaultCursorWidget = ~/MouseWidget_OrderUnloadAtPosition
    CursorWidgetWithTerrainFeedback = ~/MouseWidget_OrderUnloadAtPosition_WithTerrainFeedback
)

export MouseWidgetSelectorDefault is Template_MouseWidgetSelector_SimpleCursorWithTerrainFeedback
(
    DefaultCursorWidget = ~/DefaultMouseWidget
    CursorWidgetWithTerrainFeedback = ~/MouseWidget_SelectNeutralLand
)

MouseWidget_Explode is Template_SoftwareMouseWidgetResource
(
    HardwareMouseCursorAnimation = $/UI/Components/MouseCurseur_Explode
    SoftwareCursorTextureList = [Texture_Tactical_Cursor_MoveAndExplode]
)
export MouseWidgetSelector_Explode is Template_MouseWidgetSelector_SimpleCursor
(
    DefaultCursorWidget = ~/MouseWidget_Explode
)

MouseWidget_MoveAndExplode is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation = $/UI/Components/MouseCurseur_MoveAndExplode
)
export MouseWidgetSelector_MoveAndExplode is Template_MouseWidgetSelector_SimpleCursor
(
    DefaultCursorWidget = ~/MouseWidget_MoveAndExplode
)

//--------------------------------------------------------

template Template_TerrainCoverBonusModule
[
    RelativeTextPlacement = [0.5, 1.5],
]
is TUIMouseWidgetTerrainCoverBonusModuleResource
(
    Typeface = "Main"
    TextStyle = "TerrainCover"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )
    RelativeTextPlacement = <RelativeTextPlacement>
    WritingDuration = 2.0
)


//--------------------------------------------------------
// MouseWidgets with hardware cursor
//--------------------------------------------------------
template Template_HardwareMouseWidgetResource
[
    HardwareMouseCursorAnimation = $/UI/Components/MouseCursorAnimationDefault,
    RelativeTextPlacement = [0.5, 1.5],
    TextDescriptor = ~/TextComponentLarge
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        // Le HardwareMouseCursorAnimation doit toujours être avant le TUIMouseWidgetTextModuleResource qui l'utilise
        (
            "CursorSetter",
            TUIMouseWidgetSimpleCursorSetterModuleResource
            (
                HardwareMouseCursorAnimation = <HardwareMouseCursorAnimation>
            )
        ),
        (
            "TextModule",
            TUIMouseWidgetTextModuleResource
            (
                RelativeTextPlacement = <RelativeTextPlacement>
                TextDescriptor = <TextDescriptor>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)

template Template_HardwareMouseWidgetResource_WithBUCK
[
    HardwareMouseCursorAnimation : TMouseCursorAnimation = $/UI/Components/MouseCursorAnimationDefault,
    BUCKDescriptor : TBUCKContainerDescriptor = nil,
    PointerFollowingProperties : TPointerFollowingPropertiesRTTI = nil,
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        // Le HardwareMouseCursorAnimation doit toujours être avant le TUIMouseWidgetTextModuleResource qui l'utilise
        (
            "CursorSetter",
            TUIMouseWidgetSimpleCursorSetterModuleResource
            (
                HardwareMouseCursorAnimation = <HardwareMouseCursorAnimation>
            )
        ),
        (
            "BUCKModule",
            TUIMouseWidgetBUCKModuleResource
            (
                BUCKDescriptor = <BUCKDescriptor>
                PointerFollowingProperties = <PointerFollowingProperties>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)

template Template_HardwareMouseWidgetResource_WithTerrainHint
[
    HardwareMouseCursorAnimation : TMouseCursorAnimation = $/UI/Components/MouseCursorAnimationDefault,
    TerrainTypeToHintContent : Map<int, THintContentHolder> = MAP[],
    HintDescriptor : TBUCKHintDescriptor = ~/HintInGameBUCKComponent,
    StillTimeBeforeHintAppearance : float = 0.0,
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        (
            "CursorSetter",
            TUIMouseWidgetSimpleCursorSetterModuleResource
            (
                HardwareMouseCursorAnimation = <HardwareMouseCursorAnimation>
            )
        ),
        (
            "HintModule",
            TUIMouseWidgetTerrainHintModuleResource
            (
                TerrainTypeToHintContent = <TerrainTypeToHintContent>
                HintDescriptor = <HintDescriptor>
                StillTimeBeforeHintAppearance = <StillTimeBeforeHintAppearance>
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)

template Template_HardwareMouseWidgetResource_WithTerrainFeedback
[
    RelativeTextPlacement = [0.5, 1.5],
    CursorMap =
    MAP
    [
        (ECoverTypeForInterface/None, $/UI/Components/MouseCurseur_defaut),
        (ECoverTypeForInterface/Light, $/UI/Components/MouseCurseur_couvert_leger),
        (ECoverTypeForInterface/Heavy, $/UI/Components/MouseCurseur_couvert_lourd),
    ],
    TextDescriptor = ~/TextComponentLarge
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        // Le HardwareMouseCursorAnimation doit toujours être avant le TUIMouseWidgetTextModuleResource qui l'utilise
        (
            "CursorSetter",
            TUIMouseWidgetTerrainCursorSetterModuleResource
            (
                TerrainTypeToMouseCursorAnimation = <CursorMap>
            )
        ),
        (
            "TextModule",
            TUIMouseWidgetTextModuleResource
            (
                RelativeTextPlacement = [0.5, 1.5]
                TextDescriptor = <TextDescriptor>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)

template Template_HardwareMouseWidgetResourcePlayerMission
[
    HardwareMouseCursorAnimation = $/UI/Components/MouseCursorAnimationDefault,
    RelativeTextPlacement = [0.5, 1.5],
    TextDescriptor = ~/TextComponentLarge,
    PlayerMissionType = ~/EPlayerMissionRequestType_Unkown
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        // Le HardwareMouseCursorAnimation doit toujours être avant le TUIMouseWidgetTextModuleResource qui l'utilise
        (
            "CursorSetter",
            TUIMouseWidgetSimpleCursorSetterModuleResource
            (
                HardwareMouseCursorAnimation = <HardwareMouseCursorAnimation>
            )
        ),
        (
            "TextModule",
            TUIMouseWidgetTextModuleResource
            (
                RelativeTextPlacement = <RelativeTextPlacement>
                TextDescriptor = <TextDescriptor>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
        (
            "PlayerMissionZoneModule",
            TUIMouseWidgetPlayerMissionZoneResource
            (
                PlayerMissionType = <PlayerMissionType>
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)


DefaultMouseWidget is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [0.9, 0.9]
    TextDescriptor = nil
)

MouseWidget_Blank is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/Curseur_Blank
    TextDescriptor = nil

    RelativeTextPlacement = [0.0, 0.0]
)

MouseWidget_OrderAlly is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_defaut
)

MouseWidget_OrderEnemy is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_defaut
)

MouseWidget_OrderInvalid is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_invalide
)

MouseWidget_OrderNeutralLand is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_defaut
)

MouseWidget_OrderPlayer is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_attaque
)

MouseWidget_SelectAlly is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_selection_defaut
)

MouseWidget_SelectEnemy is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_attaque
)

MouseWidget_SelectInvalid is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_invalide
)

MouseWidget_SelectNeutralLand is Template_HardwareMouseWidgetResource_WithTerrainFeedback
(
    CursorMap = MAP
    [
        (ECoverTypeForInterface/None, $/UI/Components/MouseCurseur_defaut),
        (ECoverTypeForInterface/Light, $/UI/Components/MouseCurseur_couvert_leger),
        (ECoverTypeForInterface/Heavy, $/UI/Components/MouseCurseur_couvert_lourd),
        (ECoverTypeForInterface/BarbedWire,  $/UI/Components/MouseCurseur_barbed_wire),
        (ECoverTypeForInterface/MineAT,  $/UI/Components/MouseCurseur_AT_mine),
        (ECoverTypeForInterface/MineAP,  $/UI/Components/MouseCurseur_AP_mine)
    ]
)

MouseWidget_SelectPlayer is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_selection_defaut
)

MouseWidget_Ghost is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [1, 1.5]
)

MouseWidget_OrderMoveFast is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_mouvement_rapide
)

MouseWidget_OrderMoveFast_WithTerrainFeedback is Template_HardwareMouseWidgetResource_WithTerrainFeedback
(
    CursorMap = MAP
    [
        (ECoverTypeForInterface/None,  $/UI/Components/Mousecurseur_mouvement_rapide),
        (ECoverTypeForInterface/Light, $/UI/Components/Mousecurseur_mouvement_rapide_coverl),
        (ECoverTypeForInterface/Heavy, $/UI/Components/Mousecurseur_mouvement_rapide_coverh),
        (ECoverTypeForInterface/BarbedWire,  $/UI/Components/Mousecurseur_mouvement_rapide_barbed_wire),
        (ECoverTypeForInterface/MineAT,  $/UI/Components/Mousecurseur_mouvement_rapide_AT_mine),
        (ECoverTypeForInterface/MineAP,  $/UI/Components/Mousecurseur_mouvement_rapide_AP_mine)
    ]
)

MouseWidget_OrderReverse is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_curseur_retour
)

MouseWidget_OrderReverse_WithTerrainFeedback is Template_HardwareMouseWidgetResource_WithTerrainFeedback
(
    CursorMap = MAP
    [
        (ECoverTypeForInterface/None,  $/UI/Components/Mousecurseur_curseur_retour),
        (ECoverTypeForInterface/Light, $/UI/Components/Mousecurseur_curseur_retour_coverl),
        (ECoverTypeForInterface/Heavy, $/UI/Components/Mousecurseur_curseur_retour_coverh),
        (ECoverTypeForInterface/BarbedWire,  $/UI/Components/Mousecurseur_curseur_retour_barbed_wire),
        (ECoverTypeForInterface/MineAT,  $/UI/Components/Mousecurseur_curseur_retour_AT_mine),
        (ECoverTypeForInterface/MineAP,  $/UI/Components/Mousecurseur_curseur_retour_AP_mine)
    ]
)

MouseWidget_OrderMoveAndAttack is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_mouvement_attaque
)

MouseWidget_OrderMoveAndAttack_WithTerrainFeedback is Template_HardwareMouseWidgetResource_WithTerrainFeedback
(
    CursorMap = MAP
    [
        (ECoverTypeForInterface/None,  $/UI/Components/Mousecurseur_mouvement_attaque),
        (ECoverTypeForInterface/Light, $/UI/Components/Mousecurseur_mouvement_attaque_coverl),
        (ECoverTypeForInterface/Heavy, $/UI/Components/Mousecurseur_mouvement_attaque_coverh),
        (ECoverTypeForInterface/BarbedWire,  $/UI/Components/Mousecurseur_mouvement_attaque_barbed_wire),
        (ECoverTypeForInterface/MineAT,  $/UI/Components/Mousecurseur_mouvement_attaque_AT_mine),
        (ECoverTypeForInterface/MineAP,  $/UI/Components/Mousecurseur_mouvement_attaque_AP_mine)
    ]
)

MouseWidget_OrderUnloadAtPosition is Template_HardwareMouseWidgetResource
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_UnloadAtPosition
)

MouseWidget_OrderUnloadAtPosition_WithTerrainFeedback is Template_HardwareMouseWidgetResource_WithTerrainFeedback
(
    CursorMap = MAP
    [
        (ECoverTypeForInterface/None,  $/UI/Components/Mousecurseur_UnloadAtPosition),
        (ECoverTypeForInterface/Light, $/UI/Components/Mousecurseur_UnloadAtPosition_coverl),
        (ECoverTypeForInterface/Heavy, $/UI/Components/Mousecurseur_UnloadAtPosition_coverh),
        (ECoverTypeForInterface/BarbedWire,  $/UI/Components/Mousecurseur_UnloadAtPosition_barbed_wire),
        (ECoverTypeForInterface/MineAT,  $/UI/Components/Mousecurseur_UnloadAtPosition_AT_mine),
        (ECoverTypeForInterface/MineAP,  $/UI/Components/Mousecurseur_mouvement_attaque_AP_mine)
    ]
)

MouseWidget_AddDefensePoint is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_AddDefensePoint
)

MouseWidget_ValidateDefense is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_ValidateDefense
)

MouseWidget_InvalidDefense is Template_HardwareMouseWidgetResource
(
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCurseur_InvalidDefense
)

MouseWidget_OrderAIAttack is Template_HardwareMouseWidgetResourcePlayerMission
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_ai_attack
    PlayerMissionType = ~/EPlayerMissionRequestType_Seize
)

MouseWidget_OrderAIArtilleryFocus is Template_HardwareMouseWidgetResourcePlayerMission
(
    RelativeTextPlacement = [1, 1.5]
    HardwareMouseCursorAnimation = $/UI/Components/Mousecurseur_ai_artillery_focus
    PlayerMissionType = ~/EPlayerMissionRequestType_ManageArtillery_Focus
)

//--------------------------------------------------------
// MouseWidgets with software cursor (weapon)
//--------------------------------------------------------

private template TextComponentWithGradientBackground
[
    PaddingX = 0,
    TextSize = "MouseWidget/TextModule",
    TypefaceToken = "Second",
]
is BUCKTextDescriptor
(
    ElementName = 'TextComponent'

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_Up
        InterLine = 0.1
    )

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor  = [0.5, 0.0]
    )

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    TextDico = ~/LocalisationConstantes/dico_interface_outgame
    TypefaceToken = <TypefaceToken>


    TextStyle = "Default"
    TextColor = "MouseWidget/TextModule"

    TextSize = <TextSize>
    TextPadding = TRTTILength4( Magnifiable = [<PaddingX>, 0.0, <PaddingX>, 0.0])

    Components =
    [
        BUCKGradientDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI( RelativeWidthHeight = [1,1] )

            Transition0 = 0
            Transition1 = 0.3
            Transition2 = 0.7
            Transition3 = 1

            TransitionColor0 = "MouseWidget/Gradient0"
            TransitionColor1 = "MouseWidget/Gradient1"
            IsRelative = true
        )
    ]
)

private TextComponentWeapon is TextComponentWithGradientBackground
(
    PaddingX = 10
    TextSize = "MouseWidget/TextModule"
)

private TextComponentLarge is TextComponentWithGradientBackground
(
    PaddingX = 10
    TypefaceToken = "Second"
    TextSize = "MouseWidget/TextModuleBig"
)

template Template_SoftwareMouseWidgetResource
[
    RelativeTargetPointerPlacement  = [0.5, 0.5],
    RelativeTextPlacement           = [0.5, 1.3],
    RelativeTextUnitComparatorPlacement = [0.5, 1.1],
    TextureWidthHeight              = [146, 120],
    SoftwareCursorTextureList       = [],
    TextDescriptor                  = ~/TextComponentWeapon,
    TextUnitComparatorDescriptor    = ~/TextComponentLarge,
    HardwareMouseCursorAnimation    = $/UI/Components/MouseCursorAnimationPointerSelectionRed
]
is TUIMouseWidgetResource
(
    ModuleResourceList =
    MAP
    [
        // Le HardwareMouseCursorAnimation doit toujours être avant le TUIMouseWidgetTextModuleResource qui l'utilise
        (
            "CursorSetter",
            TUIMouseWidgetSimpleCursorSetterModuleResource
            (
                HardwareMouseCursorAnimation = <HardwareMouseCursorAnimation>
            )
        ),
        (
            "TextModule",
            TUIMouseWidgetTextModuleResource
            (
                RelativeTextPlacement = <RelativeTextPlacement>
                TextureWidthHeight = <TextureWidthHeight>
                TextDescriptor = <TextDescriptor>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
        (
            "CursorModule",
            TUIMouseWidgetCursorModuleResource
            (
                TextureDrawer = $/UserInterface/UITextureDrawer_ColorMultiply
                RelativeTargetPointerPlacement = <RelativeTargetPointerPlacement>
                SoftwareCursorTextureList = <SoftwareCursorTextureList>
            )
        ),
        (
            "GabaritModule",
            TUIMouseWidgetGabaritModuleResource()
        ),
        (
            "LoSModule",
            TUIMouseWidgetLoSModuleResource()
        ),
        (
            "TextUnitComparatorModule",
            TUIMouseWidgetTextModuleResource
            (
                RelativeTextPlacement = <RelativeTextUnitComparatorPlacement>
                TextureWidthHeight = <TextureWidthHeight>
                TextDescriptor = <TextUnitComparatorDescriptor>
                UILayer = $/UserInterface/UILayer_2DInterface_InGame
            )
        ),
    ]
    UILayer = $/UserInterface/UILayer_2DInterface_InGame
)

MouseWidget_AirMissile is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_AirMissile]
)

MouseWidget_Artillery is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_Artillery]
)

MouseWidget_Canon is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_Canon]
)

MouseWidget_FastCanon is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_FastCanon]
)

MouseWidget_Forbidden is Template_SoftwareMouseWidgetResource
(
    //SoftwareCursorTextureList       = [Texture_Tactical_Cursor_Forbidden]
)

MouseWidget_GroundMissile is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_GroundMissile]
)

MouseWidget_MachineGun is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_MG]
)

MouseWidget_None is Template_SoftwareMouseWidgetResource
(
    //TextDescriptor = nil
)

MouseWidget_SuppressionFire is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_SuppressFire]
)

MouseWidget_UnguidedMissile is Template_SoftwareMouseWidgetResource
(
    SoftwareCursorTextureList       = [Texture_Tactical_Cursor_UnguidedMissile]
)

MouseWidget_Inefficient is Template_SoftwareMouseWidgetResource
(
    //SoftwareCursorTextureList       = [Texture_Tactical_Cursor_Inefficient]
)

//--------------------------------------------------------
// Ressources pour les paths de feedback
//--------------------------------------------------------

private PathAndArrowSizeMultiplierHelper is TPathAndArrowSizeMultiplierHelper
(
    HelperVisibility = THelperVisibility
    (
        Camera    = $/M3D/Camera/CameraPrincipale
        World     = $/M3D/Scene/DefaultWorld
        RangeList = ~/AllRanges
    )
    LineSizeMultiplierParam = $/M3D/Shader/LineSizeMultiplierParamVector
)

private TextureToutVert is TResourceTexture
(
    FileName = 'VirtualData:/ToutVert'
    UsefulnessMask = CivMask/Common + TypeMask/Common
)

// A maintenir synchro avec Slayer\Engine\Code\Eugen\CPP\InterfaceMultiProjets\UIPathDescriptor.h
private EndPathShapeType_Nothing     is 0
private EndPathShapeType_NarrowArrow is 1
private EndPathShapeType_WideArrow   is 2

// Flèche pour l'envoi d'un avion en mission
private AirplaneMissionArrowDescriptor is TUIPathDescriptor
(
    Color                 = [255, 255, 255, 128] // BGRA
    PlaqueSurLeSol        = true
    VertexCountPerSection = 3
    RenderLayerSelector = TRenderLayerSelector(RenderLayerName='Calque_Fleche_GD')
    Material              = $/M3D/Shader/MaterialBezierLine_Bichrome
    Width                 = 1500
    ArrowLength           = 2500
    ArrowWidth            = 2500
    Texture               = TextureToutVert
    EndPathShapeMode      = EndPathShapeType_WideArrow
    SizeMultiplierHelper  = PathAndArrowSizeMultiplierHelper
    OpacityControlByFloat = $/M3D/Shader/AreaFillOpacity
)

// Flèche pour une unité de renfort
private SpawnUnitArrowDescriptor is TUIPathDescriptor
(
    Color                 = [255, 255, 255, 128] // BGRA
    PlaqueSurLeSol        = true
    VertexCountPerSection = 3
    RenderLayerSelector = TRenderLayerSelector(RenderLayerName='Calque_Fleche_GD')
    Material              = $/M3D/Shader/MaterialBezierLine_Bichrome
    Width                 = 1500
    ArrowLength           = 2500
    ArrowWidth            = 2500
    Texture               = TextureToutVert
    EndPathShapeMode      = EndPathShapeType_WideArrow
    SizeMultiplierHelper  = PathAndArrowSizeMultiplierHelper
    OpacityControlByFloat = $/M3D/Shader/AreaFillOpacity
)

//
export DefenseLineMouseWidgetSelector is TBuildDefenseLineMouseWidgetSelector
(
    MouseWidgetList = MAP
    [
        (Cursor_Default          , ~/MouseWidget_AddDefensePoint),
        (Cursor_OrderPlayer      , ~/MouseWidget_ValidateDefense),
        (Cursor_OrderInvalid     , ~/MouseWidget_InvalidDefense),
    ]

    WritingDuration = 0.1

    TypeFace = "Main"
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyleList = MAP
    [
        (TextStyle_WithinRange  , "WidgetSelector/WithinRange"),
        (TextStyle_Invalid      , "WidgetSelector/Invalid"),
    ]
)
