// Index :
// • BUCKSpecificSkirmishProductionMenuMainComponentDescriptor
//     - CommandPointsAndIncomeContainer
//     - CategoryList
//     - SkirmishProductionMenuDivisionText
//
// • CommandPointsAndIncomeContainer
//     - CommandPointsText
//     - CommandPointsIncomeText
//     - CommandPointsIncomeChrono
//
// • CategoryList
//
// • UnitButtonList
//
// • SkirmishProductionMenuDivisionText
//
// • CategoryButton
//
// • UnitListScrollingContainer
//     - UnitListScrollingContainer

// -------------------------------------------------------------------------------------------------
// BUCKSpecificSkirmishProductionMenuMainComponentDescriptor
// -------------------------------------------------------------------------------------------------

private SkirmishProductionMenuBarTextHorizontalOffset is -6.0
// Skirmish Production Menu Container
BUCKSpecificSkirmishProductionMenuMainComponentDescriptor is BUCKContainerDescriptor
(
    UniqueName = 'HUDTopElement'

    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [-10.0, 36.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
        MagnifiableOffset = [10.0, 0.0]
        PixelWidthHeight = [0.0, -1.0]
        PixelOffset = [0.0, 1.0]
    )

    HasBackground = false

    HidePointerEvents = true

    Components =
    [
        BUCKListDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                AlignementToFather = [0.0, 0.0]
                AlignementToAnchor = [0.0, 0.0]
            )

            Axis = ~/ListAxis/Vertical
            FirstMargin = TRTTILength( Magnifiable = 5.0 )
            InterItemMargin = TRTTILength( Magnifiable = 5.0 )
            LastMargin = TRTTILength( Magnifiable = 185.0 )//+170 pour le MenuButtonViewMainComponent

            Elements =
            [
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/SkirmishProductionMenuCommandPointsAndIncomeContainer
                ),

                BUCKListElementDescriptor
                (
                    ExtendWeight = 1.0
                    ComponentDescriptor = ~/SkirmishProductionMenuCategoryList
                ),
            ]
        )
    ]
)



// -------------------------------------------------------------------------------------------------
// CommandPointsAndIncomeContainer
// -------------------------------------------------------------------------------------------------

// Container for Requisition points, income and income countdown
private SkirmishProductionMenuCommandPointsAndIncomeContainer is BUCKSpecificButton
(
    ElementName = 'MainButton'

    UniqueName = 'ProductionMenuMainButton'
    //SpotlightComponent = SpotlightDescriptor()
    //SpotlightLayer = $/UserInterface/UILayer_2DInterfaceDropDown_OutGame

    ButtonMagnifiableWidthHeight=[170.0, 40.0]

    Mapping = $/KeyboardOption/Mapping_MainMenu

    Components =
    [
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
                MagnifiableWidthHeight = [-6.0, 0.0]
                PixelWidthHeight = [-1.0, -2.0]
                AlignementToAnchor = [1.0, 0.5]
                AlignementToFather = [1.0, 0.5]
                PixelOffset = [-1.0, 0.0]
            )

            HasBackground = true
            BackgroundBlockColorToken = "ButtonHUD/Second"

            Components =
            [
                BUCKListDescriptor
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        RelativeWidthHeight = [0.0, 1.0]
                        AlignementToAnchor = [0.0, 0.5]
                        AlignementToFather = [0.0, 0.5]
                        MagnifiableOffset = [-7.0, 0.0]
                    )

                    Axis = ~/ListAxis/Horizontal
                    FirstMargin = TRTTILength( Pixel = 1.0 Magnifiable = 12.0)
                    InterItemMargin = TRTTILength( Pixel = 1.0 Magnifiable = 1.0)
                    LastMargin = TRTTILength( Pixel = 1.0 Magnifiable = 2.0)
                    Elements =
                    [
                        // Requisition points
                        BUCKListElementDescriptor
                        (
                            ExtendWeight = 1.0
                            ComponentDescriptor = ~/SkirmishProductionMenuCommandPointsText
                        ),

                        // Income Countdown
                        BUCKListElementDescriptor
                        (
                            ComponentDescriptor = ~/SkirmishProductionMenuCommandPointsIncomeChrono
                        ),

                        // Income Text
                        BUCKListElementDescriptor
                        (
                            ComponentDescriptor = ~/SkirmishProductionMenuCommandPointsIncomeText
                        ),
                    ]
                )
            ]
        ),
        SmallOmbrePanel
    ]
)

// -------------------------------------------------------------------------------------------------
// CommandPointsText
// -------------------------------------------------------------------------------------------------

// Requisition points
private SkirmishProductionMenuCommandPointsText is BUCKTextDescriptor
(
    // À décommenter une fois l'ancienne version du ProductionMenu retirée
    // UniqueName = "ProductionMenuCommandPointsText"
    ElementName = 'CommmandPointsText'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyle = "Default"  //"CommmandPointsText"

    HorizontalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "Second"
    BigLineAction = ~/BigLineAction/CutByDots

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextToken = "HPROD_CMDP"

    TextColor = "Orange"
    TextSize = "20"

    Hint = BUCKSpecificHintableArea
    (
        DicoToken = ~/LocalisationConstantes/dico_interface_ingame
        HintTitleToken = "HPD_CMDT"
        HintBodyToken = "HPD_CMDB"
        HintExtendedToken = "HPD_CMDE"
    )
)

// -------------------------------------------------------------------------------------------------
// CommandPointsIncomeText
// -------------------------------------------------------------------------------------------------

// Income
private SkirmishProductionMenuCommandPointsIncomeText is BUCKTextDescriptor
(
    // À décommenter une fois l'ancienne version du ProductionMenu retirée
    // UniqueName = "ProductionMenuCommandPointsIncomeText"
    ElementName = 'CommmandPointsIncomeText'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Right
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyle = "CommmandPointsIncomeText"

    HorizontalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "Main"
    BigLineAction = ~/BigLineAction/CutByDots

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextToken = "HPROD_CMDI"

    TextColor = "Glacier"
    TextSize = "15"

    Hint = BUCKSpecificHintableArea
    (
        ForbiddenTags = ['ScenarioBreakthrough']
        DicoToken = ~/LocalisationConstantes/dico_interface_ingame
        HintTitleToken = "HPD_INCT"
        HintBodyToken = "HPD_INCB"
        HintExtendedToken = "HPD_INCE"
    )
)

// -------------------------------------------------------------------------------------------------
// CommandPointsIncomeChrono
// -------------------------------------------------------------------------------------------------

// Income Countdown
private SkirmishProductionMenuCommandPointsIncomeChrono is BUCKChronoAnimatedTextureDescriptor
(
    ElementName = 'CommmandPointsIncomeChrono'
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [22.0, 22.0]
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    ChronoDrawer = $/UserInterface/ChronoDrawerCommon

    ChronoTexture = "UseInGame_CommandPoints_Chrono_Fond"
    TextureToken = "UseInGame_CommandPoints_Chrono_Fond"

    ChronoTextureColor0 = "ProductionMenu/IncomeChronoColor0"
    ChronoTextureColor1 = "ProductionMenu/IncomeChronoColor1"

    TextureFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
    )

    Components =
    [
        BUCKSpecificHintableArea
        (
            ForbiddenTags = ['ScenarioBreakthrough']

            DicoToken = ~/LocalisationConstantes/dico_interface_ingame
            HintTitleToken = "HPD_CHRONT"
            HintBodyToken = "HPD_CHRONB"
            HintExtendedToken = "HPD_CHRONE"
        ),
    ]
)

// -------------------------------------------------------------------------------------------------
// CategoryList
// -------------------------------------------------------------------------------------------------

// Categories List
private SkirmishProductionMenuCategoryList is BUCKListDescriptor
(
    ElementName = 'CategoryButtonList'

    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    Axis = ~/ListAxis/Vertical

    InterItemMargin = TRTTILength( Magnifiable = 3.0 )
)

// -------------------------------------------------------------------------------------------------
// SkirmishProductionMenuDivisionText
// -------------------------------------------------------------------------------------------------

private SkirmishProductionMenuDivisionText is BUCKTextDescriptor
(
    ElementName = "DivisionName"
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_Bottom
        InterLine = 0
    )

    TextStyle = "Default"
    TextPadding = TRTTILength4( Magnifiable = [0.0, 0.0, 0.0, 6.0] )

    HorizontalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "Main"
    BigLineAction = ~/BigLineAction/CutByDots

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextSize = "24"
    TextDico = ~/LocalisationConstantes/dico_unites
    TextColor = "LighterGray"

    Hint = BUCKSpecificHintableArea
    (
        DicoToken = ~/LocalisationConstantes/dico_interface_ingame
        HintTitleToken = ""
        HintBodyToken = ""
        HintExtendedToken = ""
    )
)

// -------------------------------------------------------------------------------------------------
// CategoryButton
// -------------------------------------------------------------------------------------------------

private SkirmishProductionMenuCategoryButtonRadioButtonManager is TBUCKRadioButtonManager()

// Unit Category Button
SkirmishProductionMenuCategoryButton is BUCKSpecificButton
(
    // style spécial pour ces boutons
    Ombre = true
    BigBorderBackgroundColorToken = "Transparent" //"ButtonHUD/BigBorder2"
    BorderLineColorToken = "Transparent"//"ButtonHUD/Border2"
    BackgroundBlockColorToken  = "ButtonHUD/Background2"
    TextColorToken = "ButtonHUD/Text2"

    ButtonRelativeWidthHeight = [0.0, 0.0]
    ButtonMagnifiableWidthHeight = [170.0, 30.0]

    IsTogglable = true
    RadioButtonManager = SkirmishProductionMenuCategoryButtonRadioButtonManager

    HidePointerEvents = true

    TextStyle = "Default"
    TextTypefaceToken = "MainBold"
    OverrideTextElementName = true

    HasText = true
    TextElementName = "ButtonTextElement"
    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    HintableAreaElementName = "ButtonHintableArea"
    HintDico = ~/LocalisationConstantes/dico_interface_ingame
    TextComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
        MagnifiableWidthHeight = [-3.0, 0.0]
        AlignementToFather = [0.5, 0.5]
        AlignementToAnchor = [0.5, 0.5]
        MagnifiableOffset = [10.0, 0.0]
    )

    TextParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )
)

// -------------------------------------------------------------------------------------------------
// UnitButtonList
// -------------------------------------------------------------------------------------------------

// Unit Buttons List
private SkirmishProductionMenuUnitList is BUCKListDescriptor
(
    ElementName = 'UnitContainerList'
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableOffset = [0.0, 11.0]
    )

    Axis = ~/ListAxis/Horizontal
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
    FirstMargin = TRTTILength( Magnifiable = 15.0 )
    LastMargin = TRTTILength( Magnifiable = 20.0 )
    InterItemMargin = TRTTILength( Magnifiable = 10.0 )
)

// -------------------------------------------------------------------------------------------------
// UnitListScrollingContainer
// -------------------------------------------------------------------------------------------------

// Unit List Scroll Container
private SkirmishProductionMenuUnitListScrollingContainer is BUCKSpecificScrollingContainerDescriptor
(
    ElementName = "UnitContainerListScrollingContainer"
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [-190.0, 145.0]
        MagnifiableOffset = [80.0, -5.0]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    HasHorizontalScrollbar = true

    ExternalScrollbar = true

    Components = [ ~/SkirmishProductionMenuUnitList ]
)

// -------------------------------------------------------------------------------------------------
// UISpecificSkirmishProductionMenuViewDescriptor
// -------------------------------------------------------------------------------------------------

UISpecificSkirmishProductionMenuViewDescriptor is TUISpecificSkirmishProductionMenuViewDescriptor
(
    MainComponentDescriptor = ~/BUCKSpecificSkirmishProductionMenuMainComponentDescriptor
    MainComponentContainerUniqueName = "SpecificInGameHUDProductionViewMainContainer" // Permet d'indiquer l'endroit ou le composant doit s'insérer

    UnitButtonListContainerDescriptor = ~/SkirmishProductionMenuUnitListScrollingContainer
    UnitButtonListContainerContainerUniqueName = "UnitContainerListScrollingContainerContainer"

    ShortcutUILayer = $/M3D/Input/UserInputLayerHandler/InputLayer_InGameShortcuts

    CategoryButtonDescriptor = ~/SkirmishProductionMenuCategoryButton
    CategoryRadioButtonManager = ~/SkirmishProductionMenuCategoryButtonRadioButtonManager
    UnitContainerDescriptor = UISpecificUnitButtonViewDescriptor
    (
        // Temps en secondes avant que le conteneur de l'unité additionnelle apparaisse lorsqu'on survole le bouton de l'unité
        TimeInSecondBeforeAdditionalUnitSpecificContainerShowUp = 0.2

        // Transparence (en pourcentage entre 0 et 1) ajouté au conteneur d'une unité lorsque cette unité n'est pas disponible
        OpacityPercentWhenUnitNotAvailable = 0.6

        // Couleur et drawer pour les textures et les textes quand l'unité n'est pas disponible
        TextureDrawerWhenUnitNotAvailable = "ColorMultiply_Grayscale"
        UnitNameColorWhenUnitNotAvailable = "ProductionMenu/UnitNameWhenNotAvailable"
        UnitCostColorWhenUnitNotAvailable = "ProductionMenu/UnitCostWhenNotAvailable"
        UnitCostGlowColorIndexWhenUnitNotAvailable = "ProductionMenu/UnitCostWhenNotAvailable/Glow"
        UnitCostColorWhenUnitCannotBeBought = "ProductionMenu/UnitCostWhenCannotBeBought"

        AceUnitNameColor = "DeckEditScreen/Ace/UnitNameColor"
        AceUnitBorderColorBySide =
        [
            (~/TBorderSide/Top | ~/TBorderSide/Left, "DeckEditScreen/Ace/UnitBorderTopAndLeftColor"),
            (~/TBorderSide/Bottom | ~/TBorderSide/Right, "DeckEditScreen/Ace/UnitBorderBottomAndRightColor"),
        ]
        AceUnitBorderThickness = "DeckEditScreen/Ace/UnitBorderThickness"

        CannotDeselect = true
        ForceEvents = true
    )
)
