///!\ MERCI DE RESPECTER L'ORDRE ALPHABETIQUE !
// Par catégories puis par constante.

//---------------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------------//
//----------------------------------- COMMON --------------------------------------------//
//---------------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------------//

CountingRule_SumAll is 1
CountingRule_Average is 2
CountingRule_Min is 3
CountingRule_Max is 4

// GhostModule.h
EShowGhostOverSpecificTerrainConditionFilterType is TBaseClass
(
    None is 0
    OnlyIfOneUnitSelected is 1
    OnlySelectedUnitsOverTerrain is 2
    AllSelectedUnitsWhenOneIsOverTerrain is 3
)

export Constantes is TTunableConstante
(
    // /!\ MERCI DE RESPECTER L'ORDRE ALPHABETIQUE !
    // Par catégories puis par constante.

//--------------------------- Constantes Affichage ---------------------------------------//

    EliminationWarningsDuration = 5.0
    FumigeneAlphaGhost = 0.3
    FumigeneMaxCount = 4
    FumigeneTimeout = 60.0

//------------------------------ Constantes Apparence -------------------------------------//

    ApparenceGhostToBuildTransitionInFuncOfBuildProgression = ~/GhostToBuildTransitionInFuncOfBuildProgression

//------------------------ Constantes AutomaticBehavior ----------------------------------//

    AutoCover_DistanceMaxEntreLesChecksDeTerrains = 60 * Metre //100 * Metre // distance entre les échantillonnages de terrain pour savoir si on fait un autocover.
    AutoCover_TagEmpechantLAutocover = "Infanterie_Cowering"
    AutoCover_AutoSpread = false
    MaxPullDistance = 1000 * Metre
    MaxPullDistanceForAirplane = 50000 * Metre
    TagBloquantLeMoveAndAttack = "Bloque_MoveAndAttack" // Lorsque ce tag est levé, l'unité stoppe son move and attaque, et le reprend lorsque le tag est supprimé



//----------------------------- Constantes Avion -----------------------------------------//

    AltitudeVol = 3000 * Metre
    CadavreOffsetMax = 0.3  // 0.33
    CadavreOffsetMin = 0.1 // 0.18
    Dogfight3D = true

//--------------------------- Constantes Bâtiments ---------------------------------------//

    // Taille et couleur des cases de la grille de placement de batiments
    AngleMinimumDeRotation = 90 // en degrée
    GridBorderExtraCellDrawRatio = 0.35
    GridLineOpacity = 0.075
    GridMarginSquareOpacity = 0.0
    GridSquareColorValid =  D3DRGBA[0, 255, 0, 255]
    GridSquareColorWarning = D3DRGBA[0, 0, 0, 0]
    GridSquareColorInvalid = D3DRGBA[255, 0, 0, 255]
    GridSquareHeight = ~/GridHelper/Height
    GridSquareOpacity = 0.05
    GridSquareWidth  = ~/GridHelper/Width

//------------------------------ Constantes Color -----------------------------------------//

    Color_Camp_Surrended = $/SystemColor/Color_Neutre
    Color_Invisible      = $/SystemColor/Color_Invisible
    Color_Neutre         = $/SystemColor/Color_Neutre

    // Couleur du debug pour les artilleries hors carte (temporaire)
    // Attention: l'alpha n'est pas pris en compte (toujours opaque)
    Color_ObserverDebugFill           = D3DRGBA[0, 0, 255, 255]
    Color_ObserverDebugOutline        = D3DRGBA[0, 0, 255, 255]
    Color_OutmapDispersionAreaFill    = D3DRGBA[255, 0, 0, 255]
    Color_OutmapDispersionAreaOutline = D3DRGBA[255, 0, 0, 255]

//----------------------------- Constantes Combat -----------------------------------------//

    LesTirsIgnorentLesObstacles = false
    ReductionDegatsSuppressDansVehicule = 0.05 // Pourcentage des dégats de suppress reçuts par un véhicule appliqués aux unités transportées
    RegenerationPinnedEnCombat = 0 //0.5
    TimerRechercheDeCibleRiposte = -1
    TagRadioArtillerie = "Radio"
    PorteeRadioArtillerie = 7500 * Metre
    EfficiencyShotSearchDistanceTolerance = 100.0

    // Si vous modifiez ici, pensez à modifier les token de loca ValEf0/ValEf1/ValEf2... correspondant à chaque index de ce tableau (0.25 <=> 25% etc.)
    // Penser aussi aux couleurs pour les label unites (SmartHoldFireIconColorToken dans UISpecificUnitLabelView)
    SmartHoldFirePenetrationMinValues = [0, 0.20, 0.40, 0.60, 0.80]

//----------------------------- Constantes Construction -----------------------------------//

    // Si le terrain est occupe par des unites alliees qui peuvent se deplacer,
    // une fois arrive sur place, le delegate va attendre ce temps avant de considerer qu'il ne peut pas construire
    // A renseigner en secondes
    TimeoutAvantCancelConstruction = 30.0

    // Pareil qu'au dessus, mais pour les unites ennemies (unites ennemies qui peuvent se deplacer bloquent la construction -> on attend ce temps avant de partir)
    TimeoutAvantCancelConstruction_Enemy = 10.0

//------------------------------ Constantes Corridors ------------------------------------//
    CanUseAlliedAllianceCorridors = false

//-------------------------------- Constantes File ----------------------------------------//

    FileExtension = "wargame"

//------------------------------ Constantes Gameplay --------------------------------------//

    Persistance_Bruit = 30.0 * Seconde

//---------------------------- Constantes GameRules ---------------------------------------//

    DefaultAIDifficultyForPlayerReplacement = IADifficulty/Difficile
    DefaultCampaignDifficulty = CampaignDifficulty/Medium

    // List d'options effects appliqué a toutes les parties, quelque soit les options choisies. Exemple : DefaultEffectsList = [ ~/OptionsEffectsDescriptor_ShowAllGisement ]
    DefaultEffectsList = [  ]

    DefaultGameType = 0 // pour savoir quel prix d'unite choisir par defaut

    RadiusRevealUnites = 1000.0
    RevealUnitesRestantes = true

    TagsRequiredToAvoidDefeat = []

//------------------------- Constantes GestionFormation -----------------------------------//

    DistanceCoherence = 5000 * Metre
    DistanceCoherenceAvion = 20000 * Metre

//-------------------------- Constantes HarvestRules --------------------------------------//

    RecolteursGerentCompatibiliteRessourcesClientMaster = false
    RecolteursRestentQuandMasterVide = false

//-------------------------- Constantes Infantry --------------------------------------//
// nombre de soldat dans l'affichage des pions de Steelman
    DefaultNbSoldiers = 1

//---------------------------- Constantes Interface ---------------------------------------//

    AfficherLeTexteDesGabarits = false
    //Couleur par défaut des ghosts
    DefaultGhostColors = TGhostColors(
        GhostColor = [255, 255, 255, 255]
        GhostAlpha = 0.4
        GhostColor2 = [255, 255, 255, 25]
        GhostAlpha2 = 0.2
    )

    NbMaxProductionsEtRecherchesSimultanees = 0
    ShowGhostOverSpecificTerrainConditionFilter = EShowGhostOverSpecificTerrainConditionFilterType/None //Options : OnlyIfOneUnitSelected / OnlySelectedUnitsOverTerrain / AllSelectedUnitsWhenOneIsOverTerrain / None
    //cf. DefaultGhostColorsOverSpecificTerrain dans GhostConstantes.ndf pour la couleur par défaut
//---------------------------- Constantes Lobby -------------------------------------------//

    // 0 is No Time Limit
    TimeLimitTable = [20, 30, 40, 50, 60, 0]

//----------------------- Constantes ManegeEnchante ---------------------------------------//

    HelicopterProductionAltitude = 350 * Metre // Au dessus du sol
    UseProductionLines = true

//----------------------------- Constantes Mouvement --------------------------------------//

    AngleArrierePourMarcheArriere       = 120 * Degre
    DistancePourDeclencherMarcheArriere = 2000 * Metre   // 1500
    ForcerMarcheAvantPourAttaquer       = true
    ForcerMarcheAvantPourUnloadAtPosition = true
    LargeurRoute                        = 60 * Metre // les trajectoires des véhicules sont décalées de 0.5 * LargeurRoute d'un côté ou de l'autre
    ToleranceLargeurRoutePourMouvementsRapidesShiftes = 2 // multiplicateur de LargeurRoute pour vérifier si la destination d'un movefast est sur la route
    DecalageDepuisLeCentreDansCouloir   = 10 * Metre // décalage des waypoints des unités par rapport au milieu du couloir quand une unité en traverse un
    RapprocherFormationsSelonObstacles  = false
    RotationLignesDInfanterie           = false // définit si les soldats d'une unité d'infanterie s'orientent comme des véhicules (pour les lignes d'infanterie)
    TagDecrochage                       = "Retraite"  // tag utilisé pour determiner si on affiche l'etiquette decrochage pendant la retraite
    TagRetraite                         = "Retraite" // tag utilisé pour determiner si l'on est en retraite ou non
    TailleMinimumDeRoute                = 700 * Metre // le jeu considère cette valeur multipliee par 1,5
    UtiliserMouvementRapideParDefaut    = false

//---------------------------- Constantes Objectives -----------------------------------//

    TimeNotificationObjectiveInSecond = 2.0
    TimeDownloadObjectiveAnimationInSecond = 1.0
    TimeAfterDownloadObjectiveInSecond = 0.5

//-------------------------- Constantes Option_Graphique ----------------------------------//

    // Valeur de 0 à 255
    ColorZoneStandard = D3DRGBA[125, 125, 125, 255]

//---------------------------- Constantes Pathfinding -------------------------------------//

    AntiDemiTourSurRoute = false

//-------------------------- Constantes Recolte -------------------------------------------//

    UnitesALArretPourRavitaillementAuto = false
    UnitesALArretPourRecolteAuto = false
    UnitesHorsMondePeuventEtreRavitaillees = false

//----------------------------- Constantes Replay -----------------------------------------//

    TimeBetweenNodeDuringReplayInSeconds = 30
    TimeNeededAfterNodeToGoBackToThisNodeInSeconds = 5

//----------------------------- Constantes Resale -----------------------------------------//

    CooldownBeforeNextSellInSeconds = 0.0
    ResalePriceRatio = 0.0

//----------------------------- Constantes Selection -----------------------------------------//

    AllowGhostCrossUnitSelection = true // Selection d'unités pré-placées et de ghost en même temps
    AllowMixedSelection = false // Selection d'unités ET bâtiments en même temps ?
    AllowMultipleBuildingSelection = false // Selection multiple de bâtiments (et quartiers)

//------------------------------ Constantes Stats -----------------------------------------//

    AverageOnPeriod = 120

//------------------------- Constantes StorageNetwork -------------------------------------//

    StorageNetworkOnWholeMap = false

//------------------------- Constantes Tourelles ----------------------------------//

    VerificationPortee = false

//------------------------- Constantes Unités hors carte ----------------------------------//

    OutmapShootPositionPitch = 69.0
    OutmapShootPositionRelativeAltitude = 100000.0
    OutmapShootPositionYaw = 42.0

//---------------------------- Constantes Visibilite --------------------------------------//

    CouvertBonusForet                            = 15000 * Metre // 10000 pas branché
    DistanceIgnoreForet                          = 0 * Metre     // pas branché
    DistanceMinimumVision                        = 0 //500 * Metre // 2500, 3000, 1000, 0 pas branché
    DistanceMinimumVisionBatimentReco            = 8000 * Metre // pas branché
    RayonCercleDeVisionMinimum                   = 0 * Metre    // pas branché
    MultiplicateurDistancePourBonusDissimulation = 1.0 DIV Metre DIV 100.0 // = (Distance en Mètres RTS) / 100.f

//------------------------------ Constantes Vision ----------------------------------------//

    ConsidereUniteStealthSurTerrainAvecDissimulation = true
    VisionParams_Default_Check3DMLos =  true
    VisionParams_Default_CheckObstacles = true

//------------------------------- Constantes Economy --------------------------------------//
    RoundToNearestDigit = MAP // Toutes les valeurs d'économie seront arrondies à ce nombre près
    [
        (~/Resource_CommandPoints, 5),
        (~/Resource_StrategicPoints, 1),
        (~/Resource_Tickets, 1),
    ]
)

//------------------------------ Constantes Victoire --------------------------------------//

VictoryConstantes  is TVictoryLevelConstantes
(
    // Les paliers de victoire ne représentent pas forcément la même chose selon que l'on a une victoire au temps et au score!! (cf les commentaires)
    PalierVictoireMineure = 0.5   // Ratio entre le score du vainqueur et le deuxieme meilleur score
    PalierVictoireMajeure = 0.75  // Ratio entre le score du vainqueur et le deuxieme meilleur score
    PalierVictoireTotale = 0.85   // Ratio entre le score du vainqueur et le deuxieme meilleur score

    BonusModeDestruction = 0.4  // Pour permettre d'avoir un meilleur lissage des types de victoire en mode destruction
                                // le tableau se lit comme ça: pour avoir une victoire majeure contre un adversaire avec 0% de bonus, celui ci ne doit pas avoit plus de 450 points
                                // avec 30% de bonus celui ci ne doit pas avoir plus de 1350 points
                                // lu autrement, avec 40% de bonus si l'adversaire à plus de 2700 points c'est un draw, entre 1950 et 2700 une victoire mineure ....
                                //                                         point max adversaire / 3000
                                // type de victoire    Ratio \ bonus   0       20%     30%     40%
                                // draw                0
                                // mineure             0,5             1500    2100    2400    2700
                                // majeure             0,75            750     1350    1650    1950
                                // totale              0,85            450     1050    1350    1650
)

//---------------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------------//
//------------------------ Spécifiques MODERNWARFARE ------------------------------------//
//---------------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------------//

ModernWarfareConstantes is TModernWarfareTunableConstante
(
    LinkToCommonConstantes = ~/Constantes // DEV

    // /!\ MERCI DE RESPECTER L'ORDRE ALPHABETIQUE !
    // Par catégories puis par constante.

//---------------------------- Constantes Affichage ---------------------------------------//

    MultiplicateurMetreRTSVersDistanceFeedbackTactique = 1.0 div 5.0//7.0

//---------------------------- Constantes Anti SW -----------------------------------------//
    BonusFactorForAntiSW = 50.0// Score bonus max possible
    MaxDistanceForScoreBonusAntiSW = 500.0 * Metre // Distance à partir de laquelle le bonus commence à s'ajouter au score de la SW pour forcer l'interception d'un missile proche de sa cible

//---------------------------- Constantes Combat ------------------------------------------//

    BonusEmbuscadeSurTouteLaSalve = false
    DistanceInfanterieEnnemiDectection = 200 * Metre
    DistanceRelaunchMouvementForMoveAndAttack = 1500 * Metre // Distance pour laquelle une unité en MoveAndAttackTarget doit relancer le mouvement si sa cible s'est déplacée de cette distance (diminuer cette valeur baisse la perf)
    DistanceToAddToEnnemiDectectionForAAWeapon = 4000.0 * Metre
    DistanceToAddToEnnemiDectectionForAntiProjectileWeapon = 0.0 * Metre // grosso merdo la porté max d'une arme anti-missile
    DistanceToAddToEnnemiDectectionForOtherWeapon = 1000.0 * Metre
    DureeDeRevelationApresAttaque = 5.0
    FacteurMinTempsViseeReel = 0.75 // Le temps de visée réel est un random entre cette valeur et la valeur de temps de visee théorique située dans l'ODS

    // Portee Min pour considerer qu'une arme est une artillerie. Les unités ne cherche pas a fuire les armes considéré comme des artilleries
    PorteeMinArmeEstConsidereCommeArtillerie = 6500.0 * Metre // 6000

    // Nombre de points de suppression récupérés par seconde. Multiplié par "<TypeUnite>_SuppressDamagesRegenRatioList" dans DamageModules.ndf.
    RegenStressParSeconde = 5

    SeuilStressPourRegen = 1

    // Une unité ne sera ravitaillée que si elle n'a pas reçut #SeuilStressPourRegen# durant les dernières #TempsSansStressPourRegen# secondes.
    TempsSansStressPourRegen = 30 // 10 secondes

    TempsSansTirNiDamagePourPasserHorsCombat = 30 // 1, passage à 2 pour limiter bug graphique

//---------------------------- Constantes Company -----------------------------------------//

    // règle de choix de terrain en comportement auto

    TempsMemoireDamageRecu = 20 // en seconde
    TypeDommagePourChoixTerrainIsSuppression = true

//---------------------------- Constantes District ----------------------------------------//

    Distance_min_quartiers_non_colles = 15 * Metre // * Metre -  minimum 39*Metre pour avoir de l'effet, 0 = ignoré
    District_SeTeleporterAuPlusProcheMemeSiOnNePeutPasTirer = false
    FuirDistrictEnFeu = true
    IgnorerLaVisibiliteDesCiblesLorsDuChoixDuPointDeTir = false
    MargePourLesTestsDeSortieDeDistrict = 16 * Metre
    MinimumStayInDistrict = 3.0        // Temps minimum passé dans un district (en seconde). Conditionne la sortie du quartier
    ModeDeRepartitionDuFeuContreLesDistricts = 0 // 0 : aucune unité nne prend de dégats, 1: l'unite la plus proche prend des degats, 2: toutes les unites prennent des degats
    RandomiserLesPatrouillesDansLesDistricts = false
    RefreshBestPlaceEveryNbSeconds = 5 // 1, Les unites dans les quartiers peuvent changer de points de tir tous les x secondes.
    CheckDistrictBox = false

//---------------------------- Constantes Gameplay ----------------------------------------//

    TransformerAttackEnMoveSiPasDArmeAdaptee = false

//--------------------------- Constantes GameRules ----------------------------------------//

    InstantMergeMaxDistance = 2500 * Metre

//---------------------------- Constantes GroupedMovement ---------------------------------//

    ClustersDimensionMax = 1000 * Metre     // Taille des clusters d'unités pour le choix d'une route commune pour les mouvements de groupe.

//------------------------ Constantes IAStratModernWarfare --------------------------------//

    // Bonus fixe donné à l'income de l'IA.
    BonusFluxByIADifficulty = MAP
    [
        (IADifficulty/TresFacile,       0),
        (IADifficulty/Facile,           0),
        (IADifficulty/Normal,           0),
        (IADifficulty/Difficile,        0),
        (IADifficulty/TresDifficile,    0),
        (IADifficulty/PlusDifficile,    0),
    ]

    // Bonus fixe donné en débuat de partie à l'IA
    BonusMoneyByIADifficulty = MAP
    [
        (IADifficulty/TresFacile,          0),
        (IADifficulty/Facile,              0),//500
        (IADifficulty/Normal,              0),//1000
        (IADifficulty/Difficile,           0),//1800
        (IADifficulty/TresDifficile,       0),//1800
        (IADifficulty/PlusDifficile,       0),//1800
    ]

    // bonus en pourcentage donné à l'argent de départ
    RelativeBonusMoneyByIADifficulty = MAP
    [
        (IADifficulty/TresFacile,       0.0),
        (IADifficulty/Facile,           0.0),
        (IADifficulty/Normal,           0.0),
        (IADifficulty/Difficile,        0.0),
        (IADifficulty/TresDifficile,    0.5),
        (IADifficulty/PlusDifficile,    0.8),
    ]

//---------------------------- Constantes Mouvement ---------------------------------------//

    MoteurHelicos_TempsArret = 4 * Seconde  // 10
    MoteurHelicos_TempsDemarrage = 1 * Seconde  // 10
    MultiplicateurConsommationUnitesArretees = 0.0 // Entre 0 et 1

//------------------------- Constantes Option_Graphique -----------------------------------//

    // Valeur de 0 à 255
    AlphaCerclePorteeVisionSelection = 130
    AlphaGhostProdBatimentDeplace = 100
    AlphaGhostProdBatimentPose = 100
    AlphaGhostProdUniteDeplace = 100
    AlphaGhostProdUnitePose = 100

//--------------------------- Constantes SpreadOrder --------------------------------------//

    SpreadDistanceUnit = 750 * Metre // Distance de dispersion d'une unique compagnie
    SpreadDistanceGroup = 2250 * Metre // Distance de dispersion d'une selection multiple d'unité

//----------------------------- Constantes Supply -----------------------------------------//

    RatioSupplyAmmoAndFuel = 0.0 // En dessous ce ce ratio de munition OU de fuel, l'unité entrera dans la boucle de ravitaillement // Ouai mais ca ne fonctionne plus

//---------------------------- Constantes Vision ------------------------------------------//

    AngleDeVisionDesUnitesDansLesDistricts = 3.1415926535897932384626433832795 * 0.95  // Presque PI
    District_AppliquerLesDegatsAuxUnitesInvisibleDansLesDistricts = true

//----------------------------- Constantes Weapons ----------------------------------------//

    AdditionalSuppressDamagePerLostPhysicalDamage = 50
    ArtilleryDispersionTargetNotVisible = 1 // 2 Dispersion du tireur (artillerie) quand la cible n'est pas visible (attaque sur position ou unité)
    CritDefaulDamagetMultiplier = 1 // Multiplicateur pour les tirs HE/Balle critiques.
    CritMarginForArmorReduction = 0 // MR en plus de la MR pour reussir un crit pour gagner 1 rang d'armure sur les tirs AP.
    DamageMultiplierWhenShooterIsHidden = 1

    // http://dl.uncw.edu/digilib/mathematics/algebra/mat111hb/functions/equations/equations.html
    DistanceFriendlyFire = 1 * Metre  // distance entre un ennemi et un allié en dessous de laquelle une tourelle ne tire pas (1000)
    DistanceMinFleeFire = 50 * Metre // Distance minimal d'éloignement d'une unité dans les flammes (en plus du radius de l'unité)
    DistanceMinOfAPFiringAuthorization = 500 * Metre // 1000 A cette distance de la cible on considère que tous les chars ont un niveau d'AP égal au nivau d'armure de la cible.
    DistanceStepToGain1APLevel = 1600 * Metre // 2000 pour SD1, 1000 avant passage de l'echelle du tableau arme / armure en base 20.
    DistanceToFavorHEATOverAP = 1000 * Metre // A partir de là ou plus loin, on utilise les armes HEAT plutot que AP si possible

    FrontSideAngleInDeg = 60
    RearSideAngleInDeg = 120

    IgnoreTirPenetrantSiAucunBlindage = true

    // Attention, le parametre OneSalveDesignatedShot n'est plus specifique a l'artillerie
    NbSalveDesignatedShot = -1 // -1 -> tir jusqu'a epuisement des munitions. 0 est indéfini, prévenir si il y en a besoin

    NombreMaxWeaponTraits = 5

    ShootingAdjustmentAngleMax = 0.4 //20°
    SplashSurTirRate = true // Est-ce que les tirs ratés font des dégâts de splash ?
    SplashRatioDamage = [0.25, 0.25, 0.10] // Stress, Suppress, Physical damages (entre 0 et 1). ratio des dégâts en périphérie du cercle de splash
    SplashRatioDistance = [0.25, 0.25, 0.15] // Stress, Suppress, Physical damages (entre 0 et 1). Ratio du rayon de splash où les dégâts commencent à être amoindris. Ex: 0.25 si DistanceImpact / SplashRadius > 0.25

    // Lorsqu'un projectile explose sur un plan et fait des dégats de splash, on définit quels plans sont affectés
    SplashCollisionPlanes = MAP
    [
        (
            ~/ECollisionPlane/NoCollision,
            [
                ~/ECollisionPlane/NoCollision,
                ~/ECollisionPlane/BoatOnWater,
                ~/ECollisionPlane/Ground,
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/LowAltitude,
                ~/ECollisionPlane/HighAltitude,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/BoatOnWater,
            [
                ~/ECollisionPlane/BoatOnWater,
                ~/ECollisionPlane/Ground,
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/Ground,
            [
                ~/ECollisionPlane/BoatOnWater,
                ~/ECollisionPlane/Ground,
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/NearGround,
            [
                ~/ECollisionPlane/BoatOnWater,
                ~/ECollisionPlane/Ground,
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/LowAltitude,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/LowAltitude,
            [
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/LowAltitude,
                ~/ECollisionPlane/HighAltitude,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/HighAltitude,
            [
                ~/ECollisionPlane/LowAltitude,
                ~/ECollisionPlane/HighAltitude,
            ]
        ),
        (
            ~/ECollisionPlane/ProjectileAltitude,
            [
                ~/ECollisionPlane/BoatOnWater,
                ~/ECollisionPlane/Ground,
                ~/ECollisionPlane/NearGround,
                ~/ECollisionPlane/ProjectileAltitude,
            ]
        ),
    ]
)

//---------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------//
//------------------------ Spécifiques WARGAME ------------------------------------//
//---------------------------------------------------------------------------------//
//---------------------------------------------------------------------------------//

WargameConstantes is TWargameTunableConstante
(
    // /!\ MERCI DE RESPECTER L'ORDRE ALPHABETIQUE !
    // Par catégories puis par constante.

//----------------------------- Constantes Affichage ------------------------------------//

    DelayBeforeNewMinimapWarning = 10.0
    ForceAffichageCercleVision = false // true

//--------------------------- Constantes Conquest ---------------------------------------//

    DefaultMoneyWinPerAllianceRateInConquestMode = 3 // medium
    TimeBeforeEarningConquestPoints = 1 // en secondes
    SuddenDeathDuration = 10

    MinMapOwningRatioWithoutInstantDefeatInConquestMode = 0

    // Tokens de localisation pour le niveau d'income
    //                                            none         very_low     low         medium      high         very_high
    MoneyWinLocalisationTokensInConquestMode = [ 'CONQ_NONE', 'CONQ_VLOW', 'CONQ_LOW', 'CONQ_MED', 'CONQ_HIGH', 'CONQ_VHIGH' ]

    // Multiplicateur de points de commandement gagnes par joueur par période de TimeBeforeEarningCommandPoints en mode conquete
    //                                   none  very_low    low   medium   high    very_high
    MoneyWinPerAllianceInConquestMode = [  0,      0.5,   0.75,      1,    1.5,       2]

    ConquestPossibleScores =
    [
        ("COHE_LOW",  1000),//1000 par défaut, 1800 (30mn) en limité
        ("COHE_MED",  2000),//2000 par défaut, 2100 (35mn) en limité
        ("COHE_HIGH", 4000),//4000 par défaut, 2400 (45mn) en limité
    ]

//-------------------------- Constantes Bleed------------------------------------//
    //Bleed pour le tactique standard (NON STEELMAN)
    BleedPropertiesByGameMode = MAP
    [
        (
            GameMode/ConquestGameMode,
            TObjectiveBleedProperties
            (
                BleedByObjectivesPossessionRatio =
                [
                    [
                        (0.50, 1),  // A partir de 50% (13) captured objectives inflict 1 bleed point to the opposite alliance & 0 pour bleed dès égalité
                        (0.60, 2),  // A partir de 60% (15) captured objectives inflict 2 bleed point to the opposite alliance.
                        (0.74, 4),  // A partir de 74% (18) captured objectives inflict 3 bleed point to the opposite alliance.
                        (0.84, 8),  // A partir de 84% (21) captured objectives inflict 8 bleed point to the opposite alliance.
                        (0.99, 20), // A partir de 99% captured objectives it inflicts 20 bleed point to the opposite alliance.
                    ]
                ]

                BleedMultiplicatorBySecondElapsed = // Time in seconds must be a positive integer, and the first line must always start by 0.
                [
                    (0,    1), // Bleed multiplies by 1 from 0 in-game second.
                    //(2100, 2), // Bleed multiplies by 2 from 1500 in-game second (35min).
                    //(2400, 3), // Bleed multiplies by 3 from 2400 in-game seconds (40min).
                ]
            )
        ),
        (
            GameMode/BreakthroughConquest,
            TObjectiveBleedProperties
            (
                BleedByObjectivesPossessionRatio =
                [
                    //Attacker
                    [
                        (0.20, 1), // A partir de 20% (6) captured objectives inflict 1 bleed point to the opposite alliance.
                        (0.50, 4), // A partir de 50% (13) captured objectives inflict 4 bleed point to the opposite alliance.
                        (0.75, 8), // A partir de 75% (19) captured objectives inflict 8 bleed point to the opposite alliance.
                        (0.99, 20), // A partir de 99% captured objectives it inflicts 20 bleed point to the opposite alliance.
                    ],
                    //Defender
                    [
                        (0.5,  1), // Up to 50% captured objectives it inflicts 1 bleed point to the opposite alliance.
                    ]
                ]

                BleedMultiplicatorBySecondElapsed = // Time in seconds must be a positive integer, and the first line must always start by 0.
                [
                    (0,    1), // Bleed multiplies by 1 from 0 in-game second.
                    (1500, 2), // Bleed multiplies by 2 from 1500 in-game second (25min).
                    (2400, 3), // Bleed multiplies by 3 from 2400 in-game seconds (40min).
                ]
            )
        ),
    ]

    //Bleed pour le tactique lancé depuis le stratégique (STEELMAN)
    BleedPropertiesByGameModeFromStrategic = MAP
    [
        (
            GameMode/ConquestGameMode,
            TObjectiveBleedProperties
            (
                BleedByObjectivesPossessionRatio =
                [
                    [
                        (0.50, 1),  // A partir de 50% (13) captured objectives inflict 1 bleed point to the opposite alliance & 0 pour bleed dès égalité
                        (0.60, 2),  // A partir de 60% (15) captured objectives inflict 2 bleed point to the opposite alliance.
                        (0.74, 4),  // A partir de 74% (18) captured objectives inflict 3 bleed point to the opposite alliance.
                        (0.84, 8),  // A partir de 84% (21) captured objectives inflict 8 bleed point to the opposite alliance.
                        (0.99, 20), // A partir de 99% captured objectives it inflicts 20 bleed point to the opposite alliance.
                    ]
                ]

                BleedMultiplicatorBySecondElapsed = // Time in seconds must be a positive integer, and the first line must always start by 0.
                [
                    (0,    1), // Bleed multiplies by 1 from 0 in-game second.
                    //(2100, 2), // Bleed multiplies by 2 from 1500 in-game second (35min).
                    //(2400, 3), // Bleed multiplies by 3 from 2400 in-game seconds (40min).
                ]
            )
        ),
        (
            GameMode/BreakthroughConquest,
            TObjectiveBleedProperties
            (
                BleedByObjectivesPossessionRatio =
                [
                    //Attacker
                    [
                        (0.20, 1), // A partir de 20% (6) captured objectives inflict 1 bleed point to the opposite alliance.
                        (0.50, 4), // A partir de 50% (13) captured objectives inflict 4 bleed point to the opposite alliance.
                        (0.75, 8), // A partir de 75% (19) captured objectives inflict 8 bleed point to the opposite alliance.
                        (0.99, 20), // A partir de 99% captured objectives it inflicts 20 bleed point to the opposite alliance.
                    ],
                    //Defender
                    [
                        //(0.55,  1), // Up to 50% captured objectives it inflicts 1 bleed point to the opposite alliance.
                        //(0.60, 1), // Up to 60% captured objectives it inflicts 1 bleed point to the opposite alliance.
                        (0.70, 1), // Up to 70% captured objectives it inflicts 1 bleed point to the opposite alliance.
                        (0.80, 2), // Up to 80% captured objectives it inflicts 2 bleed point to the opposite alliance.
                        (0.90, 3), // Up to 90% captured objectives it inflicts 3 bleed point to the opposite alliance.
                    ]
                ]

                BleedMultiplicatorBySecondElapsed = // Time in seconds must be a positive integer, and the first line must always start by 0.
                [
                    (0,    1), // Bleed multiplies by 1 from 0 in-game second.
                    (1500, 2), // Bleed multiplies by 2 from 1500 in-game second (25min).
                    (2400, 3), // Bleed multiplies by 3 from 2400 in-game seconds (40min).
                ]
            )
        ),
    ]

//-------------------------- Constantes Economy -----------------------------------------//

    DefaultIncomeMultiplierIndex    = 3 // normal
    //                   none   very_low   low      normal    high     very_high
    IncomeMultiplier = [   0,    0.5,    0.75,       1,      1.25,       1.5 ]
    TimeBeforeEarningCommandPoints  = 60 // en secondes

    TimeBeforeEarningCommandPointsFactorToAddByNbPlayers = //Facteur de TimeBeforeEarningCommandPoints à ajouter selon des paliers de joueurs
                [
                    (10,    0.1), // à partir de 10 joueurs, 10% de délai pour l'income
                    (20,    0.3)  // à partir de 20 joueurs, 30% de délai pour l'income
                ]

    BreakthroughDefenderIncomeMultiplierPerPhase = [1.00, 1.00, 1.50] // Multiplicateur pour le defenseur de l'income, par phase 1.5/1/1.5
    BreakthroughAttackerIncomeMultiplierPerPhase = [1.50, 1.50, 1.00] // Multiplicateur pour l'attaquant  de l'income, par phase 2/1.5/1
    BreakthroughDefenderStartMoneyMultiplier = 1.00 // Multiplicateur pour le defenseur de l'argent initial.
    BreakthroughAttackerStartMoneyMultiplier = 1.00 // Multiplicateur pour l'attaquant  de l'argent initial.

    //Nombre de joueurs dans l'alliance                     0,    1,    2,    3,   4,   5,   6,   7,   8,   9,  10
    ObjectiveValueForDestructionModeByAllianceTeamNumber = [0, 30.0, 30.0, 25.0, 25.0, 20.0, 15.0, 15.0, 15.0, 10.0, 10.0]
    BreakthroughDefenderIncomeMultiplierPerPhaseForDestructionMode = [1.00, 1.00, 1.00] // Multiplicateur pour le defenseur de l'income, par phase 1.5/1/1.5
    BreakthroughAttackerIncomeMultiplierPerPhaseForDestructionMode = [1.00, 1.00, 1.00] // Multiplicateur pour l'attaquant  de l'income, par phase 2/1.5/1
    BreakthroughDefenderStartMoneyMultiplierForDestructionMode = 0.666 // Multiplicateur pour le defenseur de l'argent initial.
    BreakthroughAttackerStartMoneyMultiplierForDestructionMode = 2.00 // Multiplicateur pour l'attaquant  de l'argent initial.

//--------------------------- Constantes Destruction ---------------------------------------//

    // Si on possède moins que ce ratio (en pourcentage de map) on perd instantanément.
    MinMapOwningRatioWithoutInstantDefeatInDestructionMode = 0.1
    MoneyIncomeBonusPerMapOwningRatioDestructionMode = MAP
    [
    //  ratio     Phase : A     B     C
        (0.51,       [   10,   20,   30]),
        (0.58,       [   20,   40,   60]),
        (0.65,       [   30,   60,   90]),
        (0.75,       [   40,   80,  120]),
        (0.85,       [   50,  100,  150]),
        (0.95,       [   60,  120,  180]),
    ]
    SuddenDeathDurationForObjective = 15

    DefaultIncomeMultiplierIndexInDestructionMode = 3 // medium

    // Tokens de localisation pour le niveau d'income
    //                                            none         very_low     low         medium
    IncomeMultiplierTokensInDestructionMode = [ 'CONQ_NONE', 'CONQ_VLOW', 'CONQ_LOW', 'CONQ_MED']

    // Multiplicateur de points de commandement gagnes par joueur par période de TimeBeforeEarningCommandPoints en mode conquete
    //                                   none  very_low    low   medium
    IncomeMultiplierInDestructionMode = [  0,      0.5,   0.75,      1]

//--------------------------- Constantes Défense ---------------------------------------//

    AreaSnapRange = 10000.0
    BlockedTerrainsRange = 75000.0 // Hackos !!: doit être supérieur à la valeur dans FeedbackRenderToolbox.cg pour les trucs Clipped
    LineMinimalDistance = 3750.0 //15000.0
    LineSnapRange = 7500.0
    AllowedTerrainsMask = ~/AllowedTerrainsTypeForDefense
    TrenchSlotSize = 3000.0

//------------------------- Constantes IAStrat ------------------------------------------//
    // Bonus en pourcentage donné à l'IA à l'income, par phase. Exemple : 0.0 = +0%, 0.10 = +10%
    RelativeBonusFluxByIADifficultyAndPhase = MAP
    [
    //                                 Phase A         B         C
        (IADifficulty/TresFacile,          [0.0,      0.0,      0.0]),
        (IADifficulty/Facile,              [0.0,      0.0,      0.0]),
        (IADifficulty/Normal,              [0.0,      0.0,      0.0]),
        (IADifficulty/Difficile,           [0.0,      0.0,      0.0]),
        (IADifficulty/TresDifficile,       [0.3,      0.4,      0.5]),
        (IADifficulty/PlusDifficile,       [0.6,      0.8,        1]),
    ]

    // Bonus en pourcentage donné à IA à l'argent donné en début de phase. Exemple : 0.0 = +0%, 0.10 = +10%
    RelativeBonusPhaseStartByIADifficulty = MAP
    [
    //                                 Phase A         B         C
        (IADifficulty/TresFacile,          [-0.4,   -0.4,   -0.4]),
        (IADifficulty/Facile,              [-0.2,   -0.2,   -0.2]),
        (IADifficulty/Normal,              [0.0,     0.0,     0.0]),
        (IADifficulty/Difficile,           [0.0,     0.0,     0.0]),
        (IADifficulty/TresDifficile,       [0.5,     0.5,     0.5]),
        (IADifficulty/PlusDifficile,       [1.0,     1.0,     1.0]),
    ]

    // Multiplicateur sur le nombre d'unités dans le deck de l'IA (ex : 0.5 donnera 50% d'unités en plus à l'IA)
    DeckUnitCountMultiplierByIADifficulty = MAP
    [
        (IADifficulty/TresFacile,       0),
        (IADifficulty/Facile,           0),
        (IADifficulty/Normal,           0),
        (IADifficulty/Difficile,        0),
        (IADifficulty/TresDifficile,    0.5),
        (IADifficulty/PlusDifficile,    1.0),
    ]

    // Bonus d'exp additif donné à toutes les unités du deck de l'IA (ex: 1 donnera un niveau de plus à tout le monde)
    DeckUnitExpLevelAdditiveModifierByIADifficulty = MAP
    [
        (IADifficulty/TresFacile,       -2),
        (IADifficulty/Facile,           -1),
        (IADifficulty/Normal,           0),
        (IADifficulty/Difficile,        0),
        (IADifficulty/TresDifficile,    0),
        (IADifficulty/PlusDifficile,    0),
    ]

//------------------------ Constantes IAStratWargame ------------------------------------//

    // Surrender de l'IA Strat
    UnitValueLimitForSurrender = 400    // Valeur d'unité sur la map en-dessous de laquelle l'IA va surrender (0 = pas de surrender)

//-------------------- Constantes InterfaceSpecific -------------------------------//

    NbPhasesToShowForDecks = 3

    FactoriesWhichNeverCloseProductionMenuAfterValidation = [
    ]

    MultiplicateurMetreRTSVersVitesseTactiquePourAvions = 0.45 div 1.0 // 0.45 div 1.0 est le ratio réaliste
    MultiplicateurMetreRTSVersVitesseTactiquePourInfantrie = 0.45 div 1.0
    MultiplicateurMetreRTSVersVitesseTactiquePourVehicule = 0.45 div 1.0
    MultiplicateurDegresParSecondesPourVitesseDeRotation = 1.0
    NombreUniteVisibleDesQueDetecte = true

    // Facteur utilisé pour la transformation des Plating et APValue pour l'affichage en mm dans l'UI
    PlatingAndApDisplayFactor = 5

    PaliersDAgilite = MAP
    [
        (900 *Metre, 'UIPA_EXCEP'),//Exceptional
        (1200*Metre, 'UIPA_VHIGH'),//Excellent
        (1500*Metre, 'UIPA_HIGH'), //Very good
        (1800*Metre, 'UIPA_GOOD'), //Good
        (2100*Metre, 'UIPA_MED'),  //Medium
        (2400*Metre, 'UIPA_LOW'),  //Bad
        (2700*Metre, 'UIPA_VLOW'), //Very bad
        (3000*Metre, 'UIPA_MDCR'), //Mediocre
    ]

    PaliersDeDissimulation = MAP
    [
        (1.0, 'UIPS_VLOW'),
        (2.0, 'UIPS_LOW'),
        (3.0, 'UIPS_MED'),
        (4.0, 'UIPS_HIGH'),
        (6.0, 'UIPS_VHIGH'),
        (8.0, 'UIPS_EXCEP'),
    ]

    PaliersDOptiqueDAltitude = MAP
    [
        (119, 'UISP_VHIGH'),
        (120, 'UISP_LOW'),
        (160, 'UISP_MED'),
        (240, 'UISP_GOOD'),
        (320, 'UISP_HIGH'),
        (480, 'UISP_VHIGH'),
    ]

    PaliersDOptique = MAP
    [
        (75, 'UISP_VLOW'),
        (125, 'UISP_LOW'),
        (175, 'UISP_MED'),
        (250, 'UISP_GOOD'),
        (375, 'UISP_HIGH'),
        (500, 'UISP_VHIGH'),
    ]

    PaliersDeResilience = MAP
    [
        (5, 'UIPS_VLOW'),
        (7, 'UIPS_LOW'),
        (9, 'UIPS_MED'),
        (11, 'UIPS_HIGH'),
        (13, 'UIPS_VHIGH'),
    ]

    PaliersDeTransport = MAP
    [
        (1, 'UIPT_VLGHT'),
        (2, 'UIPT_LIGHT'),
        (3, 'UIPT_HEAVY'),
    ]

    PaliersDeVitesse = MAP
    [
        (800, 'UISP_VLOW'),
        (900, 'UISP_LOW'),
        (1000, 'UISP_MED'),
        (1300, 'UISP_HIGH'),
        (4000, 'UISP_VHIGH'),
    ]

    TagDInfanteriePinned = "Infanterie_Cowering"
    TempsAttenteAffichageIconeConflitQuartier = 0.7 // Permet de temporiser l'affichage de l'icône de conflit dans un quartier le temps que les étiquettes se placent
    ValeurMinAffichageBarMoralLabel = 0.05 // compris entre 0 et 1
    ValeurMaxBarMoralLabel = 0.8 // compris entre 0 et 1
    ValeurMinimumCoverLeger = 4 // Terrain stealth bonus
    ValeurMinimumCoverMoyen = 7.5 // Terrain stealth bonus
    ValeurMinimumCoverTresLeger = 10 // Unit stealth bonus

    ValeurOptionTailleNewLabelMinimal = 0.45*1.4
    ValeurOptionTailleNewLabelVerySmall = 0.55*1.4
    ValeurOptionTailleNewLabelSmall = 0.63*1.4
    ValeurOptionTailleNewLabelNormal = 0.7*1.4
    ValeurOptionTailleNewLabelLarge = 0.88*1.4
    ValeurOptionTailleNewLabelVeryLarge = 1.0*1.4


//------------------------ Constantes Lobby ---------------------------------------//

    ArgentInitialMinimumPourGererLIA = 250
    VictoryTypeDestructionLevelsTable = MAP
    [
        // Syntaxe :
        // (Argent Initial Courant, [liste des valeurs de scoreToReach possibles pour cette valeur d'argent initial avec 0 signifiant Total Destruction]),
        //Toute nouvelle valeur d'ArgentInitial doit apparaitre dans VictoryTypeDestructionLevelsTable du fichier GDConstantes.ndf
        (250,  [1500, 2000, 2500, 3000, 4000, 0]),
        (375,  [1500, 2000, 2500, 3000, 4000, 0]),
        (500,  [1500, 2000, 2500, 3000, 4000, 0]),
        (750,  [1500, 2000, 2500, 3000, 4000, 0]),
        (1000, [1500, 2000, 2500, 3000, 4000, 0]),
        (1250, [1500, 2000, 2500, 3000, 4000, 0]),
        (1500, [1500, 2000, 2500, 3000, 4000, 0]),
        //(6000, [5000, 5500, 6000, 6500, 7000, 0]),
    ]

    // VictoryTypeDestructionLevelsTable = [[1000, 1500, 2000, 0],                                                    //ArgentInitialTable 1000
                                        // [1000, 1500, 2000, 2500, 0],                                               //ArgentInitialTable 1500
                                        // [1000, 1500, 2000, 2500, 3000, 0],                                         //ArgentInitialTable 2000
                                        // [1000, 1500, 2000, 2500, 3000, 3500, 0],                                   //ArgentInitialTable 2500
                                        // [1000, 1500, 2000, 2500, 3000, 3500, 4000, 0],                             //ArgentInitialTable 3000
                                        // [1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 0],                       //ArgentInitialTable 3500
                                        // [2000, 2500, 3000, 3500, 4000, 4500, 5000, 0],                             //ArgentInitialTable 4000
                                        // [2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 0],                       //ArgentInitialTable 4500
                                        // [2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 0],                 //ArgentInitialTable 5000
                                        // [2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 0],           //ArgentInitialTable 5500
                                        // [2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 0]]     //ArgentInitialTable 6000

//---------------------------- Constantes Mouvement -------------------------------------//

    AmphibiousSpawnLandSeaRatio = 1.5 // >=0, ponderation arbitraire pour determiner si une amphibie spawne au spawn marin ou terrestre (=1:elle prendra le plus proche a vol d'oiseau ; <1:elle preferera le marin, >1:elle preferera le terrestre)
    InfantryTrenchDepth = 7 * Metre //9 * Metre //11.5 * Metre
    TimeForOnePAMove = 0.7 //0.5 // temps de mouvement pour dépenser un PA : ne pas descendre trop bas. Cela affecte la qualité de certains algo

//------------------------ Constantes Option_Graphique ----------------------------------//

    // Valeur de 0 à 255
    AlphaCerclePorteeVisionSelectionQuandPasseSurAutreUnite = 30
    AlphaGhostSelection = 220
    AlphaGhostSelectionQuandPasseSurAutreUnite = 50
    ColorBorderStandard = D3DRGBA[255, 255, 255, 63]
    ColorZoneHighlight = D3DRGBA[200, 200, 200, 100]
    ColorZoneText = D3DRGBA[255, 255, 255, 255]

//------------------------- Constantes Supply -------------------------------------------//

    RatioSupplyHealth = 0.1 // En dessous ce ce ratio de vie, l'unité entrera dans la boucle de ravitaillement
    RatioSupplyToStartAMission = 0.4 // Valeur en dessous de laquelle les unités ne sont pas ajouté dans les missions (valable pour tous les type de ravitaillement contrairement aux variables au dessus)
    SupplyFuelForBoat = false
    SupplyHealthForBoat = false

//------------------------------ Constantes Tactic --------------------------------------//

    // ATTENTION NE SONT PRISES QUE SI ON NE TROUVE PAS SON BONHEUR DANS LE DECK
    //---- Set OTAN, PACT
    CommandUnitToSpawnForNation = [ nil, nil ]
    CommandUnitToSpawnOverWaterForNation = [ nil, nil ]
)
