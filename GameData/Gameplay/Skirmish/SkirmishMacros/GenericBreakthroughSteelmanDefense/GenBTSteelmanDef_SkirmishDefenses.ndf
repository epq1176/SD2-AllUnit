//-------------------------------------------------------------------------
//------------------------- MISSIONS DE DEFENSE ---------------------------
//-------------------------------------------------------------------------
// Parametres TMacroActionDescriptor_Common
//-------------------------------------------------------------------------
// GenerationType :
// NumberOfMacro :
// ParametresDeMission : Transport, Airstrike, Support, ArtilleryStrike
// PoolModelList : liste des unites demandees
// DisableReinforcement : si on recoit des renforts en cours d'attaque ou pas
// IgnoreSafePath : Le pathfind de la mission cherche ou non à esquiver la menace
// TuerLaMissionEnFinDeVieAuLieuDeLaRelancer : (bool)
// LaunchASAP_RatioMin : permet de lancer l'attaque sans attendre toutes les unites requises à combiner avec ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]
// MissionOmnisciente : Pas utilise dans Normandie (systeme de connaissance de zone)
//-------------------------------------------------------------------------
// Parametres TMacroActionDescriptor_CorridorDefense_Specific
//-------------------------------------------------------------------------
// ForcedCorridor : (format special ex:[1]) permet de forcer l'attaque sur un couloir.
//

// PARAMETERS
//-------------------------------------------------------------------------
Gen_WeightDefensePointScoringFeatureMapSteelman is MAP
[
        (EDefensePointScoringFeature/DistanceBonus, 3.0),
        (EDefensePointScoringFeature/DistanceMargin, 0.0 * Metre),
        (EDefensePointScoringFeature/DistanceDecayLength, 1000.0 * Metre),
        (EDefensePointScoringFeature/MalusDefaultDefensePoint, 3.0),
]

//-------------------------------------------------------------------------
// SettingList
GenBTSteelmanDef_AvoidFillerCorridors_Defense_Settings is MAP
[
    (
        ESettingType/AvoidCorridorTags,
        TAvoidCorridorTagsSettingHolder(AvoidedCorridorTags = ["Filler"])
    ),
]


// MAINTAINS
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Maintain_CorridorDefenses is TMacroActionDescriptor_CorridorDefense_Specific
(
    GenerationType = TGenerationType_Maintain
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Maintain_CorridorDynamicDefenses is TMacroActionDescriptor_CorridorDynamicDefense_Specific
(
    GenerationType = TGenerationType_Maintain
)
//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
private template GenBTSteelmanDef_Template_Defense
[
    GenerationType = TGenerationType_FixedSize,
    NumberOfMacro:int = 1,
    MinimumResourceForLaunch:int = 0,
    PoolModelList = [~/GenBTSteelmanDef_Pool_AT_Defense, GenBTSteelmanDef_Pool_HMG_Defense],
    UseTaggedPool:bool = true,
    OrderedZoneWeightList = [],
    DefensePointScoringFeatureValue = MAP[],
]
is TMacroActionDescriptor_CorridorDefense_Specific
(
    GenerationType = <GenerationType>
    NumberOfMacro = <NumberOfMacro>
    MinimumResourceForLaunch = <MinimumResourceForLaunch>
    IgnoreSafePath = true //on n'esquive pas la menace sur le chemin
    DisableReinforcement = true
    IgnoreVisionForDefensePosition = false
    IgnoreEnemyDirectionForDefensePosition = false
    IgnoreDefensePositionSafety = false
    OrderedZoneWeightList = <OrderedZoneWeightList>

    LaunchASAP_RatioMin = 0.01
    ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]

    PoolModelList = <PoolModelList>

    TaggedPoolModelList = (
        <UseTaggedPool> == false ? [] :
        [
            (["DefenseInfantry"], [~/GenBTSteelmanDef_Pool_HMG_Defense]),
            (["DefenseAA"], [~/GenBTSteelmanDef_Pool_AA_Defense]),
            (["DefenseTank"], [~/GenBTSteelmanDef_Pool_AT_Defense]),
        ]
    )
    DefensePointScoringFeatureValue = <DefensePointScoringFeatureValue>

    ParametresDeMission = MAP[
        (
            ESettingType/Airstrike,
            TAirStrikeSettingHolder(Setting = ~/GenBTSteelmanDef_BasicAirstrikeSupport)
        ),
        (
            ESettingType/ArtilleryStrike,
            TArtilleryStrikeSettingHolder(InMapArtilleryAmount = 1 OutMapArtilleryAmount = 0)
        ),
        (
            ESettingType/Support,
            TSupportSettingHolder(SettingList = [GenBTSteelmanDef_Renfort_AT])
        ),
        (
            ESettingType/Generation,
            TGenerationSettingHolder(NumberOfCorridorsPerMission = 1 ConsiderOnlyAssignedCorridors = true)
        ),
    ]
)
//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
private template GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
[
    NumberOfMacro:int = 1,
    MinimumResourceForLaunch:int = 0,
    PoolModelList = [~/GenBTSteelmanDef_Pool_AT_Defense, GenBTSteelmanDef_Pool_HMG_Defense],
    UseTaggedPool:bool = true
]
is TMacroActionDescriptor_CorridorDynamicDefense_Specific
(
    GenerationType = TGenerationType_FixedSize
    NumberOfMacro = <NumberOfMacro>
    MinimumResourceForLaunch = <MinimumResourceForLaunch>
    IgnoreSafePath = true //on n'esquive pas la menace sur le chemin
    DisableReinforcement = true
    IgnoreVisionForDefensePosition = false
    IgnoreEnemyDirectionForDefensePosition = false
    IgnoreDefensePositionSafety = false

    LaunchASAP_RatioMin = 0.01
    ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]

    PoolModelList = <PoolModelList>

    TaggedPoolModelList = (
        <UseTaggedPool> == false ? [] :
        [
            (["DefenseInfantry"], [~/GenBTSteelmanDef_Pool_HMG_Defense]),
            (["DefenseAA"], [~/GenBTSteelmanDef_Pool_AA_Defense]),
            (["DefenseTank"], [~/GenBTSteelmanDef_Pool_AT_Defense]),
        ]
    )

    ParametresDeMission = MAP[
        (
            ESettingType/Airstrike,
            TAirStrikeSettingHolder(Setting = ~/GenBTSteelmanDef_BasicAirstrikeSupport)
        ),
        (
            ESettingType/ArtilleryStrike,
            TArtilleryStrikeSettingHolder(InMapArtilleryAmount = 1 OutMapArtilleryAmount = 0)
        ),
        (
            ESettingType/Support,
            TSupportSettingHolder(SettingList = [GenBTSteelmanDef_Renfort_AT])
        ),
        (
            ESettingType/AvoidCorridorTags,
            TAvoidCorridorTagsSettingHolder(AvoidedCorridorTags = ["Filler"])
        ),
    ]
)

//-------------------------------------------------------------------------
// Defenses couloir classiques
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive is GenBTSteelmanDef_Template_Defense
(
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_FrontLane is GenBTSteelmanDef_Template_Defense
(
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_BackLane is GenBTSteelmanDef_Template_Defense
(
    OrderedZoneWeightList = [2]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    UseTaggedPool = false
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Tank_FrontLane is TMacroActionDescriptor_CorridorDefense_Specific
(
    GenerationType = TGenerationType_FixedSize
    NumberOfMacro = 1
    MinimumResourceForLaunch = 0
    IgnoreSafePath = true //on n'esquive pas la menace sur le chemin
    DisableReinforcement = true
    IgnoreVisionForDefensePosition = false
    IgnoreEnemyDirectionForDefensePosition = false
    IgnoreDefensePositionSafety = false
    PrioritizeCorridorsForTaggedPoolModels = true

    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman

    LaunchASAP_RatioMin = 0.01
    ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]

    PoolModelList = [~/GenBTSteelmanDef_Pool_Tank_Defense]

    TaggedPoolModelList = (
        [
            (["MainAttack", "AttackCombined"], [~/GenBTSteelmanDef_Pool_Tank_Defense]),
        ]
    )

    ParametresDeMission = MAP[
        (
            ESettingType/Airstrike,
            TAirStrikeSettingHolder(Setting = ~/GenBTSteelmanDef_BasicAirstrikeSupport)
        ),
        (
            ESettingType/ArtilleryStrike,
            TArtilleryStrikeSettingHolder(InMapArtilleryAmount = 1 OutMapArtilleryAmount = 0)
        ),
        (
            ESettingType/Support,
            TSupportSettingHolder(SettingList = [GenBTSteelmanDef_Renfort_AT])
        ),
        (
            ESettingType/AvoidCorridorTags,
            TAvoidCorridorTagsSettingHolder(AvoidedCorridorTags = ["Filler"])
        ),
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_FrontLane_Filler is GenBTSteelmanDef_Template_Defense
(
    GenerationType = TGenerationType_BasedOnNumberOfCorridors
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_BackLane_Filler is GenBTSteelmanDef_Template_Defense
(
    GenerationType = TGenerationType_BasedOnNumberOfCorridors
    OrderedZoneWeightList = [2]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_FrontLane is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    UseTaggedPool = false
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_BackLane is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    UseTaggedPool = false
    OrderedZoneWeightList = [2]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_Adaptive is GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
(
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_FrontLane is TMacroActionDescriptor_CorridorDynamicDefense_Specific
(
    GenerationType = TGenerationType_FixedSize
    NumberOfMacro = 1
    MinimumResourceForLaunch = 0
    IgnoreSafePath = true //on n'esquive pas la menace sur le chemin
    DisableReinforcement = true
    IgnoreVisionForDefensePosition = false
    IgnoreEnemyDirectionForDefensePosition = false
    IgnoreDefensePositionSafety = false
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman

    LaunchASAP_RatioMin = 0.01
    ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]

    PoolModelList = [~/GenBTSteelmanDef_Pool_Tank_Defense_Budget]

    ParametresDeMission = MAP[
        (
            ESettingType/Airstrike,
            TAirStrikeSettingHolder(Setting = ~/GenBTSteelmanDef_BasicAirstrikeSupport)
        ),
        (
            ESettingType/ArtilleryStrike,
            TArtilleryStrikeSettingHolder(InMapArtilleryAmount = 1 OutMapArtilleryAmount = 0)
        ),
        (
            ESettingType/Support,
            TSupportSettingHolder(SettingList = [GenBTSteelmanDef_Renfort_AT])
        ),
        (
            ESettingType/AvoidCorridorTags,
            TAvoidCorridorTagsSettingHolder(AvoidedCorridorTags = ["Filler"])
        ),
    ]
)
//-------------------------------------------------------------------------
// Defenses couloir autogen
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_Autogen is GenBTSteelmanDef_Template_Defense
(
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Adaptive_Autogen_FrontLane is GenBTSteelmanDef_Template_Defense
(
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_Tank_Autogen_FrontLane is GenBTSteelmanDef_Template_Defense
(
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
    PoolModelList = [~/GenBTSteelmanDef_Pool_Defense_Tank]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_Autogen is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
    UseTaggedPool = false
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_Autogen_Economic is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Economic
    UseTaggedPool = false
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_Autogen_FrontLane is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
    UseTaggedPool = false
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Static_AA_Autogen_BackLane is GenBTSteelmanDef_Template_Defense
(
    PoolModelList = [ ~/GenBTSteelmanDef_Pool_AA_Defense ]
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
    UseTaggedPool = false
    OrderedZoneWeightList = [2]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_Adaptive_Autogen is GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
(
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_Adaptive_Autogen_Economic is GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
(
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Economic
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_Tank_Autogen is GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
(
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Stage_1
    PoolModelList = [~/GenBTSteelmanDef_Pool_Defense_Tank]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Dynamic_Tank_Autogen_Economic is GenBTSteelmanDef_Template_Dynamic_Defense_Corridor
(
    MinimumResourceForLaunch = ~/GenBTSteelmanDef_MinimumResourceForLaunch_Economic
    PoolModelList = [~/GenBTSteelmanDef_Pool_Defense_Tank]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Defense_Filler_FrontLane is TMacroActionDescriptor_CorridorDefense_Specific
(
    GenerationType = TGenerationType_BasedOnNumberOfCorridors
    IgnoreSafePath = true //on n'esquive pas la menace sur le chemin
    DisableReinforcement = true
    IgnoreVisionForDefensePosition = false
    IgnoreEnemyDirectionForDefensePosition = false
    IgnoreDefensePositionSafety = false
    OrderedZoneWeightList = [1]
    DefensePointScoringFeatureValue = ~/Gen_WeightDefensePointScoringFeatureMapSteelman

    LaunchASAP_RatioMin = 0.01
    ProdProperties = [TProdProperty_LaunchAsSoonAsPossible]

    PoolModelList = [
        ~/GenBTSteelmanDef_Pool_Defense_Filler,
    ]

    ParametresDeMission =
    MAP
    [
        (
            ESettingType/Generation,
            TGenerationSettingHolder(NumberOfCorridorsPerMission = 1 ConsiderOnlyAssignedCorridors = true)
        ),
    ]
)

//-------------------------------------------------------------------------
// Budgets
//-------------------------------------------------------------------------
GenBTSteelmanDef_Budget_Frontlane is 6


//-------------------------------------------------------------------------
// Pool Models
//-------------------------------------------------------------------------
GenBTSteelmanDef_ProductionFallback is [
    "Vehicule_Appui",
    "Infanterie_Standard",
    "Canon_AA",
    "Vehicule_Transport_Arme",
    "Char"
] // Ce fallback permet d'assurer la production d'au moins une unite pour les corridors taggués. Sinon ça bloque le couloir
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_Tank_Defense is TPoolModel
(
    // Pas de budget, il faut quelqu'un
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{05aec3cf-667f-11e9-952e-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_Lourd",
                "Char_Standard",
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{05b1d10f-667f-11e9-a394-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = false
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Infanterie_Standard",
                "Infanterie_Spec_Defense",
            ]
        ),
    ]
)
//------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_HMG_Defense is TPoolModel
(
    // Pas de budget, il faut quelqu'un
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{feb0281e-55e5-11e9-985c-704d7b2c87d4}
            Required = true
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Infanterie_Spec_Defense",
                "Infanterie_CMD",
                "Infanterie_Standard",
                "Vehicule_Appui",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_AT_Defense is TPoolModel
(
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{feb0281f-55e5-11e9-b6f6-704d7b2c87d4}
            Required = true
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Canon_AT_Lourd",
                "ChasseurDeChar_Lourd",
                "Canon_AT_Standard",
                "ChasseurDeChar_Standard",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
        TPoolElement(
            DescriptorId = GUID:{feb02820-55e5-11e9-943c-704d7b2c87d4}
            Required = false
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Infanterie_CMD",
                "Infanterie_Spec_Defense",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_AA_Defense is TPoolModel
(
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{feb02821-55e5-11e9-b26f-704d7b2c87d4}
            Required = true
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Canon_AA_Standard",
                "Canon_AA_Porte",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
    ]
)
export GenBTSteelmanDef_Pool_HMG_Defense_Budget is TPoolModel
(
    Budget = ~/GenBTSteelmanDef_Budget_Frontlane
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{05b1d110-667f-11e9-af7b-704d7b2c87d4}
            Required = true
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Infanterie_Spec_Defense",
                "Infanterie_Standard",
                "Vehicule_Appui",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_Tank_Defense_Budget is TPoolModel
(
    Budget = ~/GenBTSteelmanDef_Budget_Frontlane
        ModelList = [
        TPoolElement(
            DescriptorId = GUID:{05b1d111-667f-11e9-aca5-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_CMD",
                "Vehicule_CMD",
                "Char_Lourd",
                "Char_Standard",
                "Char",
                "Vehicule_Appui"
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{05b1d112-667f-11e9-96d0-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_Reco",
                "Vehicule_Reco",
                "Infanterie_Reco",
                "Infanterie_Standard",
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{05b1d113-667f-11e9-8db7-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_Lourd",
                "Char_Standard",
                "Vehicule_Appui",
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{05b1d114-667f-11e9-9e70-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_Standard",
                "Vehicule_Appui",
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{05b1d115-667f-11e9-9f47-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = false
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Infanterie_Spec_Attaque",
                "Infanterie_Standard",
            ]
        ),
    ]
    + ~/GenBTSteelmanDef_Infantry_Fallback_Attack
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_AA_Defense_Budget is TPoolModel
(
    Budget = ~/GenBTSteelmanDef_Budget_Frontlane
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{05b1f821-667f-11e9-95a9-704d7b2c87d4}
            Required = true
            Nb = 1
            IndexPriorityOverPrice = true
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Canon_AA_Standard",
                "Canon_AA_Porte",
            ]
            +~/GenBTSteelmanDef_ProductionFallback
        ),
    ]
)
//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_Defense_Filler is TPoolModel
(
    Budget = 2
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{feb04f30-55e5-11e9-a8ef-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = false
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Cheapest
            TagsPriority = [
                "Infanterie_Standard",
                "Infanterie_Spec_Defense",
                "Vehicule_Appui",
            ]
        ),
        TPoolElement(
            DescriptorId = GUID:{feb04f31-55e5-11e9-aa15-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = true
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Infanterie_Spec_Defense",
                "Infanterie_Standard",
            ]
        ),
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelmanDef_Pool_Defense_Tank is TPoolModel
(
    Budget = 3
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{1b0282c0-578f-11e9-81d4-704d7b2c87d4}
            Required = false
            IndexPriorityOverPrice = false
            Nb = 1
            PriceComparisonMethod = EPriceComparatorType/Random
            TagsPriority = [
                "Char_Lourd",
                "Char",
                "Char_Standard"
            ]
        ),
    ]
)

//-------------------------------------------------------------------------