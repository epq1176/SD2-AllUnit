//-------------------------------------------------------------------------
//----------------------------- STRATEGY ----------------------------------
//-------------------------------------------------------------------------
export GenericBreakthroughSteelmanStrategy is TIAGeneralStrategy
(
    StrategyName = "StmBTAI"
    FirstGenerator = GenBTSteelman_Choose_Strategy
    ConstantesMap = MAP[
        ("ForceTacticalMoveAndAttack", TEugBBoolean(Value = true)),
    ]
    AllowToByPassNbMacroActionAllowedToProduceSimultaneous = true
    ShouldUseTaggedCorridorsForTouchDown = true
    DefaultIncomeForDynamicBudget = 3
    TransitionList =
    [
        GenBTSteelman_Transition_DefMod,
        GenBTSteelman_Transition_AtkMod,

        GenBTSteelmanDef_Transition_StartToDeploy,
        GenBTSteelmanDef_Transition_StartToFrontLineDefense,
        GenBTSteelmanDef_Transition_StartToBackLineDefense,
        GenBTSteelmanDef_Transition_DeployToFrontLineDefense,
        GenBTSteelmanDef_Transition_FrontLineDefenseToBackLineDefense,
        GenBTSteelmanDef_Transition_BackLineDefenseToStrikeBack,

        GenBTSteelmanAtk_Transition_StartToPhaseC,
        GenBTSteelmanAtk_Transition_StartToPhaseB,
        GenBTSteelmanAtk_Transition_StartToPhaseA,
        GenBTSteelmanAtk_Transition_StartToGeneric,
        GenBTSteelmanAtk_Transition_DeployToPhaseA,
        GenBTSteelmanAtk_Transition_Phase_B,
        GenBTSteelmanAtk_Transition_Phase_C,
    ]
)

//-------------------------------------------------------------------------
//---------------------------- CONDITIONS ---------------------------------
//-------------------------------------------------------------------------
export GenBTSteelman_Condition_GotoDefMod is TSequenceCondition_MapPossession
(
    PossessionRatio = 0.6
)

export GenBTSteelman_Condition_GotoAtkMod is TSequenceCondition_Not
(
    Condition = ~/GenBTSteelman_Condition_GotoDefMod
)
//-------------------------------------------------------------------------
//--------------------------- TRANSITIONS ---------------------------------
//-------------------------------------------------------------------------
export GenBTSteelman_Transition_DefMod is TIAGeneralStrategyTransition
(
    Origine = GenBTSteelman_Choose_Strategy
    Condition = GenBTSteelman_Condition_GotoDefMod
    Destination = GenBTSteelmanDef_Choose_Strategy
)

export GenBTSteelman_Transition_AtkMod is TIAGeneralStrategyTransition
(
    Origine = GenBTSteelman_Choose_Strategy
    Condition = GenBTSteelman_Condition_GotoAtkMod
    Destination = GenBTSteelmanAtk_Choose_Strategy
)

//-------------------------------------------------------------------------
//------------------------------ PHASES -----------------------------------
//-------------------------------------------------------------------------
export GenBTSteelman_Choose_Strategy is TSequenceGeneratorDescriptor
(
    // Fake phase qui permet juste d'orienter la strategie dans la direction voulue
    NbMacroActionAllowedToProduceSimultaneous = 9001
    GeneratorList =
    [
        ~/GenBTSteelman_FakeSupport,
    ]
)

//-------------------------------------------------------------------------
export GenBTSteelman_FakeSupport is TMacroActionDescriptor_Support_Specific
(
    GenerationType = TGenerationType_FixedSize
    NumberOfMacro = 1

    TagDeContre = "ThisUnitDoesNotExist"

    PoolModelList = [
        ~/GenBTSteelman_FakePool,
    ]
)
//-------------------------------------------------------------------------
export GenBTSteelman_FakePool is TPoolModel
(
    ModelList = [
        TPoolElement(
            DescriptorId = GUID:{80fadff0-d931-11e8-b33e-2c56dc4c150d}
            Required = true
            Nb = 1
            TagsPriority = [
                "ThisUnitDoesNotExist",
            ]
        ),
    ]
)
